load("crea.repongoing.rda")
load("sir.datahfonly.Rdata")
###########################################################
#CODE EACH OF THE FORMULA VARIABLES
crea.rep$Ethnicity<-ifelse(is.na(crea.rep$Ethnicity),7,crea.rep$Ethnicity)
crea.rep$log_CREA <- log10(crea.rep$Creatinine)
crea.rep$PP<-crea.rep$SBP-crea.rep$DBP
crea.rep$HTN<-ifelse(crea.rep$SBP>140|crea.rep$DBP>90,1,0)
crea.rep$Anaemia<-ifelse(!is.na(crea.rep$Haemoglobin)&((crea.rep$Gender=="M" & crea.rep$Haemoglobin<130)|(crea.rep$Gender== "F" & crea.rep$Haemoglobin<115)),1,0)
###############################################################################

#CALCULATING MDRD eGFR
o<-ifelse(crea.rep$Ethnicity==4,1.212,1)
o<-ifelse(is.na(crea.rep$Ethnicity),1,crea.rep$Ethnicity)
p<-ifelse(crea.rep$Gender=="F",0.742,1)

#12156 test dates have 2 measures for an individual with different values

crea.rep$MDRDeGFR<-(175*((crea.rep$Creatinine/88.42)^-1.154))*(crea.rep$Age^-0.203)*o*p
##################################################################################
crea.rep$CKDmark<-ifelse(!is.na(crea.rep$MDRDeGFR)&crea.rep$MDRDeGFR<60,1,0)
crea.rep$CKDmark<-ifelse(!is.na(crea.rep$MDRDeGFR)&crea.rep$MDRDeGFR>=60&!is.na(crea.rep$UACratio)&crea.rep$UACratio>=3,1,crea.rep$CKDmark)
#Tests marked with a 1 for CKDmark are qualifying tests, Where there are more than 2 more than  months apart there is CKD.
#tabulate the first qualifying test for each patient
CKs<-crea.rep[crea.rep$CKDmark==1,c(1,2,50)]
CKs$EntryDate<-as.Date(as.character(CKs$EntryDate),format="%Y%m%d")
CKs$EntryDate2<-CKs$EntryDate-90
crea.rep$event.date<-as.Date(as.character(crea.rep$EntryDate),format="%Y%m%d")

for (i in 1:length(CKs$PatientID)){
CKs$x[i]<-ifelse(length(crea.rep$PatientID[crea.rep$PatientID==CKs$PatientID[i] &crea.rep$event.date>CKs$EntryDate[i] & crea.rep$event.date<CKs$EntryDate2[i]&crea.rep$CKDmark==0])>0,1,0)
}

CKs<-CKs[CKs$x==0,c(1:2,5)] #The CKD qualifying tests with another qualifying test at least 3 months prior and no normal tests in between
names(CKs)<-c("PatientID","EntryDate","CKDStage")
CKs$CKDe<-1
CKs$EntryDate<-as.character(CKs$EntryDate)
CKs$EntryDate<-gsub("-","",CKs$EntryDate) 

length(CKs$PatientID)#48518
crea.rep<-merge(crea.rep,CKs,all.x=TRUE)

###################################################################################
#MEAN LOG CREATININE WITHIN 6M

C6<-crea.rep[,c("PatientID","EntryDate","log_CREA")]
C6$EntryDate<-as.Date(as.character(C6$EntryDate),format="%Y%m%d")
C6$EntryDate2<-C6$EntryDate+180

for (i in 1:length(C6$PatientID)){
C6$MEANLOGCR6[i]<-mean(crea.rep$log_CREA[crea.rep$PatientID==C6$PatientID[i] &crea.rep$event.date>C6$EntryDate[i] & crea.rep$event.date<=C6$EntryDate2[i]])
}
crea.rep<-merge(crea.rep,C6,all.x=TRUE)


###################################################################################
#MEAN EGFR WITHIN 6M-MDRD

smalltab<-crea.rep[,c("PatientID","EntryDate","MDRDeGFR")]
columns=names(smalltab[c(1,3)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
as.data.frame
first$EntryDate2<-first$EntryDate+180
first$EntryDate<-as.Date(as.character(first$EntryDate),format="%Y%m%d")
first$EntryDate2<-as.Date(as.character(first$EntryDate2),format="%Y%m%d")

crea.rep$EntryDate<-as.Date(as.character(crea.rep$EntryDate),format="%Y%m%d")
indx1 <-neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate,first$EntryDate2,best="after")

crea.rep$MDRD6M<-smalltab[indx1, "MDRDeGFR"]
summary(crea.rep$MDRD6M) #20657 are missing
crea.rep$MDRD6M<-unlist(crea.rep$MDRD6M)

################################################################################### CHECKED
#MEAN CKDEPI eGFR WITHIN 6M
smalltab<-crea.rep[,c("PatientID","EntryDate","MDRDeGFR")]
columns=names(smalltab[c(1,3)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
as.data.frame
smalltab$EntryDate2<-smalltab$EntryDate+180
smalltab$EntryDate<-as.Date(as.character(smalltab$EntryDate),format="%Y%m%d")
smalltab$EntryDate2<-as.Date(as.character(smalltab$EntryDate2),format="%Y%m%d")

crea.rep$EntryDate<-as.Date(as.character(crea.rep$EntryDate),format="%Y%m%d")
indx1 <-neardate(crea.rep$PatientID, smalltab$PatientID, crea.rep$EntryDate,smalltab$EntryDate2,best="after")

crea.rep$MDRD6M<-smalltab[indx1, "MDRDeGFR"]
summary(crea.rep$MDRD6M) #20657 are missing
crea.rep$MDRD6M<-unlist(crea.rep$MDRD6M)














library(quantmod)

mutate(EntryDate = ymd(EntryDate)) %>%
filter(Entrydate >= today() + days(180) %>%
arrange(EntryDate)%>%
group_by(PatientID) %>%
mutate(moving_average = roll_mean(CKDEPIeGFR,180,align="right", fill=0)) %>%
as.data.frame

indx1 <-neardate(crea.rep$PatientID, smalltab$PatientID, crea.rep$EntryDate,first$EntryDate2,best="after")











columns=names(smalltab[c(1,3)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
as.data.frame
smalltab$EntryDate<-as.Date(as.character(smalltab$EntryDate),format="%Y%m%d")
smalltab$EntryDate2<-smalltab$EntryDate+180

indx1 <-neardate(crea.rep$PatientID, smalltab$PatientID, crea.rep$EntryDate,first$EntryDate2,best="after")


crea.rep$SerumSodium<-first[indx1, "SerumSodium"]
crea.rep$SerSodDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx1])) >30, 1, NA)
table(crea.rep$SerSodDateFlag) #652
a<-crea.rep[!is.na(crea.rep$SerumSodium),]
length(a$PatientID) #284225
crea.rep$SerumSodium<-unlist(crea.rep$SerumSodium)


crea.rep$MEANCKDEPIeGFR6<-mean(crea.rep$CKDEPIeEGFR[crea.rep$PatientID $in$ E6$PatientID & crea.rep$EntryDate>E6$EntryDate & crea.rep$EntryDate<=E6$EntryDate2)
}

attach(E6)
x<-for (i in 1:length(PatientID)){
  for (j in 1:length(EntryDate)){

  Dmarker<-ifelse(as.Date(EntryDate)>as.Date(EntryDate[j]),1,0)
  Dmarker2<-ifelse(as.Date(EntryDate)<as.Date(EntryDate[j]+180) & Dmarker==1,1,0)  
  MEANKDEPI6[i,j]<-mean(CKDEPIeGFR[i,j,Dmarker2==1])
}}

library(foreach)

x<-foreach(p=PatientID, .combine='cbind')%:%


foreach(d=EntryDate, .combine='c') %do% {
test<-ifelse(PatientID==PatientID[i] & EntryDate>EntryDate[d]& EntryDate<=EntryDate2[d],1,0)}
mean(E6$EPIeGFR[E6$EntryDate>d & EntryDate<=EntryDate2[d]]}



crea.rep<-merge(crea.rep,E6,all.x=TRUE)
###################################################################################
#MEAN CREATININE WITHIN 6M

Ca6<-crea.rep[,c("PatientID","EntryDate","Creatinine")]
Ca6$EntryDate<-as.Date(as.character(Ca6$EntryDate),format="%Y%m%d")
Ca6$EntryDate2<-Ca6$EntryDate+180

for (i in 1:length(C6$PatientID)){
Ca6$MEANCR6[i]<-mean(crea.rep$Creatinine[crea.rep$PatientID==Ca6$PatientID[i] &crea.rep$event.date>Ca6$EntryDate[i] & crea.rep$event.date<=Ca6$EntryDate2[i]])
}
crea.rep<-merge(crea.rep,Ca6,all.x=TRUE)

###################################################################################

#MDRD eGFR
o<-ifelse(crea.rep$Ethnicity==4,1.212,1)
p<-ifelse(crea.rep$Gender=="F",0.742,1)
crea.rep$MDRDeGFR<-(175*((crea.rep$Creatinine/88.42)^-1.154))*(crea.rep$Age^-0.203)*o*p

################################################################################
#crea.rep$RateRenChange #Rate of renal change- DUNJA WILL CODE
###################################################################################
#crea.rep$AKIepisodes<- #no. past AKI episodes- SEE ADDITIONAL FILE FOR NHS ALGORITHM
###################################################################################
#crea.rep$WorsRenFail<- Worsening renal failure- DUNJA WILL CODE

