memory.size(70000)
#READ CONDITION FILES- SUFFIX ALL NAMES WITH A 1 THEN YOU CAN IMPORT THEM ALL TOGETHER

library(zoo)
library(plyr)
library(tidyverse)
library(zoo)
library(data.table)
library(survival)
library(lubridate)

#The processed sir.data file will be used from this point onwards, not the long format.
####################################################

#######################################################
#######################################################
load("crea.rephf2tests.Rdata")
load("sirdatahfonly.rda")
sir.data<-sir.data[sir.data$PatientID %in% crea.rep$PatientID,]
sir.data$CodeValue<-as.numeric(as.character(sir.data$CodeValue))
sir.data<-sir.data[!is.na(sir.data$CodeValue),]
head(sir.data[sir.data$EntryDate<19800101,]) #Historical xray data  etc has been retrospectively added 
sir.data$EntryDate<-ifelse(sir.data$EntryDate>20170801|sir.data$EntryDate<19000101,NA,sir.data$EntryDate)

allfiles = list.files(pattern="*1.csv")
for (i in 1:length(allfiles)) assign(allfiles[i], read.csv(allfiles[i]))
#######################################################

#ADD IN VARIOUS CONDITIONS AND FLAGS FROM MAIN EHR FILES
#Narrow lookup table to the full list of codes of interest to speed up processing- use for CPRD
#merged <- Reduce(function(x, y) merge(x, y,all.x=TRUE,all.y=TRUE), 
#                 list(AF1.csv,BMI1.csv,BNP1.csv,BUN1.csv,cessation1.csv,DBP1.csv,Diabetes1.csv,Dialysis1.csv,Haemoglobin1.csv, HeartRate1.csv,IHD1.csv,MCV1.csv,Nephrectomy1.csv,NTPROBNP1.csv,PVD1.csv,RM1.csv,SBP1.csv,SerumAlbumin1.csv,SerumPotassium1.csv,SerumSodium1.csv,smoking1.csv,transplant1.csv,UACR1.csv,UAlbumin1.csv,UricAcid1.csv))
#sir.data<-sir.data[which(sir.data$ReadCode %in% merged$ReadCode),]


#######################################################

#CODE CONDITIONS REQUIRING VALUES TO BE ADDED, NEAREST IF WITHIN X TIME PERIOD
#################################################################

#NEAREST PRIOR MEAN DAILY SERUM SODIUM #DATE FLAG 30 DAYS
#OUT OF RANGE REMOVAL TBA
sir.data$temp<-ifelse(sir.data$ReadCode %in% SerumSodium1.csv$ReadCode, paste(sir.data$CodeValue),NA)

smalltab<-sir.data[!is.na(sir.data$temp),c("PatientID","CodeValue","EntryDate")]
columns=names(smalltab[c(1,3)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
summarise(SerumSodium=mean(CodeValue)) 

length(first$SerumSodium[!is.na(first$SerumSodium)])
sir.data<-merge(sir.data,first,all.x=TRUE)
length(sir.data$temp[!is.na(sir.data$temp)])

indx1 <-neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
crea.rep$SerumSodium<-first[indx1, "SerumSodium"]
crea.rep$SerSodDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx1])) >30, 1, NA)
#######################################################

#CLOSEST DAILY BMI MEAN #1YR DATE FLAG
sir.data$temp<-as.numeric(ifelse(sir.data$ReadCode %in% BMI1.csv$ReadCode, as.numeric(paste(sir.data$CodeValue)),NA))
sir.data$height<-as.numeric(ifelse(sir.data$ReadCode %in% Height1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA))
#Apply max height across dataset

htab<-sir.data[!is.na(sir.data$height),c("PatientID","CodeValue","EntryDate")]
columns1=names(htab[c(1,3)])
dots<-lapply(columns1, as.symbol)
firstH <-htab %>% 
group_by_(.dots=dots) %>%
summarize(Height=max(CodeValue)) 
sir.data<-merge(sir.data,firstH,all.x=TRUE)

sir.data$weight<-as.numeric(ifelse(sir.data$ReadCode %in% Weight1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA))
sir.data$temp<-ifelse(is.na(sir.data$temp),(as.numeric(sir.data$weight)/(as.numeric(sir.data$height))^2),sir.data$temp)

BMItab<-sir.data[!is.na(sir.data$temp),c("PatientID","temp","EntryDate")]
columns1=names(BMItab[c(1,3)])
dots<-lapply(columns1, as.symbol)
firstA <-BMItab %>% 
group_by_(.dots=dots) %>%
summarize(BMI=mean(temp)) 

indx1 <- neardate(crea.rep$PatientID, firstA$PatientID, crea.rep$EntryDate, firstA$EntryDate, 
                   best="prior")
crea.rep$BMI<-firstA[indx1, "BMI"]
crea.rep$BMIDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - firstA$EntryDate[indx1])) >365, 1, NA)

#######################################################
#MAX DAILY SERUM URIC ACID #1 YEAR

sir.data$temp<-ifelse(sir.data$ReadCode %in% UricAcid1.csv$ReadCode, as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$temp),c("PatientID","CodeValue","EntryDate")]
columns=names(smalltab[c(1,3)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
summarise(means=mean(CodeValue)) 

length(first$means[!is.na(first$means)])
sir.data<-merge(sir.data,first,all.x=TRUE)

length(sir.data$temp[!is.na(sir.data$temp)])

indx1 <-neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
crea.rep$UricAcid<-first[indx1, "means"]
crea.rep$UricAcidDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx1])) >365, 1, NA)
##################################################################
#MAX DAILY BLOOD UREA NITROGEN #30 DAYS
sir.data$temp<-ifelse(sir.data$ReadCode %in% BUN1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$temp),c("PatientID","CodeValue","EntryDate")]
columns=names(smalltab[c(1,3)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
summarise(means=mean(CodeValue)) 

length(first$means[!is.na(first$means)])
sir.data<-merge(sir.data,first,all.x=TRUE)

length(sir.data$temp[!is.na(sir.data$temp)])

indx1 <-neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
crea.rep$BUN<-first[indx1, "means"]
crea.rep$BUNDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx1])) >30, 1, NA)


##############################################################
#MIN DAILY SERUM POTASSIUM #1 MONTH

sir.data$temp<-ifelse(sir.data$ReadCode %in% SerumPotassium1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$temp),c("PatientID","CodeValue","EntryDate")]
columns=names(smalltab[c(1,3)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
summarise(means=mean(CodeValue)) 

length(first$means[!is.na(first$means)])
sir.data<-merge(sir.data,first,all.x=TRUE)

length(sir.data$temp[!is.na(sir.data$temp)])

indx1 <-neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
crea.rep$SerPot<-first[indx1, "means"]
crea.rep$SerPotDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx1])) >30, 1, NA)


##############################################################
#MIN DAILY HEART RATE #1 MONTH
sir.data$HeartRate<-ifelse(sir.data$ReadCode %in% HeartRate1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$HeartRate),c("PatientID","HeartRate","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.min(as.numeric(HeartRate))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))
crea.rep$HeartRate<-first[indx3, "HeartRate"]
crea.rep$HeartRateDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >30, 1, NA)


##############################################################
#MIN DAILY SYSTOLIC BP #30 DAYS
sir.data$SBP<-ifelse(sir.data$ReadCode %in% SBP1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$SBP),c("PatientID","SBP","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.min(as.numeric(SBP))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))
crea.rep$SBP<-first[indx3, "SBP"]
crea.rep$SBPDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >30, 1, NA)

##############################################################
#MIN DAILY DIASTOLIC BP #30 DAYS
sir.data$DBP<-ifelse(sir.data$ReadCode %in% DBP1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$DBP),c("PatientID","DBP","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.min(as.numeric(DBP))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))

crea.rep$DBP<-first[indx3, "DBP"]
crea.rep$DBPDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >30, 1, NA)

##############################################################
#MAX DAILY SERUM ALBUMIN #1 YEAR
sir.data$SerumAlbumin<-ifelse(sir.data$ReadCode %in% SerumAlbumin1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$SerumAlbumin),c("PatientID","SerumAlbumin","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.max(as.numeric(SerumAlbumin))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))
crea.rep$SerumAlbumin<-first[indx3, "SerumAlbumin"]
crea.rep$SerumAlbuminDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >365, 1, NA)

###################################################################
#MAX DAILY URINE ALBUMIN #1 YEAR
sir.data$UrineAlbumin<-ifelse(sir.data$ReadCode %in% UAlbumin1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$UrineAlbumin),c("PatientID","UrineAlbumin","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.max(as.numeric(UrineAlbumin))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))
crea.rep$UrineAlbumin<-first[indx3, "UrineAlbumin"]
crea.rep$UrineAlbuminDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >365, 1, NA

save(crea.rep,file="crea.rep1yr2tests.Rdata")
###################################################################
#MAX DAILY URINE ALBUMIN CREATININE RATIO #1 YEAR
sir.data$UACratio<-ifelse(sir.data$ReadCode %in% UACR1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$UACratio),c("PatientID","UACratio","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.max(as.numeric(UACratio))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))
crea.rep$UACratio<-first[indx3, "UACratio"]
crea.rep$UACDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >365, 1, NA

###################################################################
#MAX DAILY MEAN CORPUSCULAR VOLUME #120 DAYS
sir.data$MCV<-ifelse(sir.data$ReadCode %in% MCV1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$MCV),c("PatientID","MCV","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.max(as.numeric(MCV))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))
crea.rep$MCV<-first[indx3, "MCV"]
crea.rep$MCVDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >120, 1, NA)

save(crea.rep,file="crea.rep1yr2tests.Rdata")

###################################################################
#MAX DAILY HAEMOGLOBIN #120 DAYS
sir.data$Haemoglobin<-ifelse(sir.data$ReadCode %in% Haemoglobin1.csv$ReadCode,as.numeric(paste(sir.data$CodeValue)),NA)
smalltab<-sir.data[!is.na(sir.data$Haemoglobin),c("PatientID","Haemoglobin","EntryDate")]
columns=names(smalltab[c(1,2)])
dots<-lapply(columns, as.symbol)
first <-smalltab %>% 
group_by_(.dots=dots) %>%
slice(which.max(as.numeric(Haemoglobin))) %>%
ungroup()
sir.data<-merge(sir.data,first,all.x=TRUE)

indx1 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate)
indx2 <- neardate(crea.rep$PatientID, first$PatientID, crea.rep$EntryDate, first$EntryDate, 
                   best="prior")
indx3<-ifelse(is.na(indx1), indx2, # find closest date match in data2 for each id and date in data1
      ifelse(is.na(indx2), indx1, 
            ifelse(abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))) 
             < abs(as.numeric(day(strptime(first$EntryDate, format="%Y%m%d")))[indx2]- as.numeric(day(strptime(crea.rep$EntryDate, format="%Y%m%d")))), indx2, indx1)))
crea.rep$Haemoglobin<-first[indx3, "Haemoglobin"]
crea.rep$HaemDateFlag<- ifelse(as.numeric(abs(crea.rep$EntryDate - first$EntryDate[indx3])) >120, 1, NA)

#########################################################

#NEPHRECTOMY
sir.data$nephrectomydate<-with(sir.data,ifelse(sir.data$ReadCode  %in%  Nephrectomy1.csv$ReadCode,as.integer(paste(sir.data$EntryDate)), NA)) 
smalltab<-sir.data[!is.na(sir.data$nephrectomydate),c("PatientID","nephrectomydate")]
first<-smalltab %>%
    group_by(PatientID) %>%
    arrange(nephrectomydate) %>%
    slice(1L) %>%
    ungroup ()
crea.rep<-merge(crea.rep,first,all.x=TRUE)
crea.rep$DaysSinceNephrectomy<-ifelse(!is.na(crea.rep$nephrectomydate) & crea.rep$nephrectomydate<=crea.rep$EntryDate,crea.rep$EntryDate-crea.rep$nephrectomydate,0)

#DIABETES
sir.data$DiabDate<-with(sir.data,ifelse(sir.data$ReadCode  %in%  Diabetes1.csv$ReadCode,as.integer(paste(sir.data$EntryDate)), NA)) 
smalltab<-sir.data[!is.na(sir.data$DiabDate),c("PatientID","DiabDate")]
first<-smalltab %>%
    group_by(PatientID) %>%
    arrange(DiabDate) %>%
    slice(1L) %>%
    ungroup ()
crea.rep<-merge(crea.rep,first,all.x=TRUE)
crea.rep$DiabDate<-ifelse(!is.na(crea.rep$DiabDate) & crea.rep$DiabDate<=crea.rep$EntryDate,1,0)
crea.rep$DaysSinceDiabetic<-ifelse(!is.na(crea.rep$DiabDate) & crea.rep$DiabDate<=crea.rep$EntryDate,(crea.rep$EntryDate-crea.rep$DiabDate),0)

save(crea.rep, file = "crea.rep1yr2tests.Rdata")

#also....
#Diabetes
#Atrial Fibrillation
#Ischaemic Heart Disease
#Peripheral Vascular Disease
#Renal Malignancy
#Renal transplant
##########################################################
#CODE EACH OF THE FORMULA VARIABLES

crea.rep$log_CREA <- log10(crea.rep$Creatinine)
#crea.rep$AKI #Acute Kidney Injury
crea.rep$PP<-sum(crea.rep$SBP-crea.rep$DBP)
crea.rep$HTN<-ifelse(crea.rep$SBP>140|crea.rep$DBP>90,1,0)
#crea.rep$eGFR<- #Estimated glomerular filtration rate
#crea.rep$CKD<- #Chronic Kidney Disease
#crea.rep$RateRenChange #Rate of renal change
crea.rep$Anaemia<-ifelse(((crea.rep$Gender=="M" & crea.rep$Haemoglobin<130)|(crea.rep$Gender== "F" & crea.rep$Haemoglobin<115)),1,0)
#crea.rep$AKIepisodes<- #no. past AKI episodes?
#crea.rep$WorsRenFail<- Worsening renal failure


#########################################################
#CODE STOP CODED VARIABLES  
#smoking
#anaemia
#hypertension
#immunosuppresants
#antimicrobials
#NSAIDSs & STOP CODES/EXPOSURE TIME
#Nephrotoxins

#########################################################
PRESCRIBING DATA
###########################################
#PREP TAB DELIMITED FILES FOR PERL
#https://github.com/rw251/research-events-medication-htn/blob/master/resources/example-data2.txt
head(P2[P2$ReadCode=="b311.",])

crea.rep$LDdose<- #LOOP DIURETIC DOSE
crea.rep$TDdose<- #Thiazide DIURETIC DOSE
crea.rep$AAdose<- #ALDOSTERONE ANTAGONIST DOSE
crea.rep$ACEIdose<- #ACE INHIBITOR DOSE
crea.rep$ARBdose<- #Angiotensin receptor blocker DOSE

CHECK FOR SENSITIITY OF SPECULATIVE HEART FAILURE CODES
###################################################################
#HEART FAILURE ALL CODES ANY HF AT ANY POINT
data2<-sir.data[sir.data$ReadCode %in% HeartFailureAll1.csv$Code,]
crea.rep$HeartFailureAll<-ifelse(crea.rep$PatientID  %in%  data2$PatientID,1,0)
rm(data2)
###################################################################
#HEART FAILURE CONFIRMED CODES ANY HF AT ANY POINT
data2<-sir.data[sir.data$ReadCode %in% HeartFailureConfirmed1.csv$ReadCode,]
crea.rep$HeartFailureConf<-ifelse(crea.rep$PatientID  %in%  data2$PatientID,1,0) 
rm(data2)
specheartpatients<-crea.rep[crea.rep$HeartFailureConf==0&crea.rep$HeartFailureAll==1,]
levels(as.factor(specheartpatients$PatientID))
table(crea.rep$HeartFailureAll)
#CODE BINARY CONDITIONS BASED ON COMMENCEMENT DATE ONWARDS

########################################################
crea.rep$DataSource<-1
