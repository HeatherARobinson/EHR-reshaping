ssh mqbpjhr4@incline256.itservices.manchester.ac.uk
module load apps/gcc/R/3.3.3
R

load("crea.rep201117.rda")
load("sir.datahfonly.Rdata")

library (taRifx)
library (dplyr)
library(tcltk)
library(lubridate)
require(dplyr)

##################################################################################
#BASED ON THE NHS UK AKI ALGORITHM, OMITTING INDICATORS FROM URINE ALBUMIN
###################################################################################

#SELECT ELIGIBLE PATIENTS
attach(crea.rep)
CKs<-crea.rep[crea.rep$CKDStage>0,]
sir.data$event.date<-as.Date(as.character(sir.data$EntryDate),format="%Y%m%d")
a<-sir.data[sir.data$ReadCode=="44J3."&sir.data$PatientID %in% CKs$PatientID,]
#The dataset is cleaned again at the end to make sure that CKD patients are not classed as having an AKI
na.omit(a)
a<-a[!is.na(a$PatientID),]
attach(a)
index<-which(event.date>=as.Date(ymd("2007-01-01")))
#The index start date should be 1 year prior to the first recorded creatinine test of the study window
a<-a[index,]
length(a$PatientID) #9723 potentially qualifying tests
levels(a$Ethnicity)[c(2:4,11)]<-4
levels(a$Ethnicity)[c(4)]<-4
a$CodeValue<-ifelse(as.numeric(as.character(a$CodeUnits))>0 
& as.numeric(as.character(a$CodeUnits))<1000  
& is.na(a$CodeValue),a$CodeUnits,a$CodeValue)
a$CodeUnits<-ifelse(!is.na(temp),paste(""),paste(a$CodeUnits))
a$CodeValue<-as.numeric(as.character(a$CodeValue))
a<a[!is.na(a$CodeValue),]
summary(a$CodeValue)


a$Creatinine<-as.numeric(a$CodeValue)
#CALCULATING MDRD eGFR
o<-ifelse(a$Ethnicity=="4",1.212,1)
o<-ifelse((is.na(a$Ethnicity)|a$Ethnicity==""),1,o)
p<-ifelse(a$Gender=="F",0.742,1)
a$Age<-(as.numeric(year(strptime(a$EntryDate, format="%Y%m%d"))))-a$BirthYear
a$MDRDeGFR<-(175*((a$Creatinine/88.42)^-1.154))*(a$Age^-0.203)*o*p

a<-a[,c("PatientID","event.date","Creatinine","Age", "Gender","MDRDeGFR")]
attach(a)
names(a)
########################################################################### CHECKED

#Order creatinine values and find the max per day per patient
destring(c(PatientID,Creatinine,Age,Gender,event.date,MDRDeGFR))
a <- a[order(-Creatinine),] #Creatinine is a summary value- the highest serum creatinine per day
table(duplicated(a[,1:2]))
a2<-a[duplicated(a[,1:2]),] #Remove same day duplicate entries
a<-a[!rownames(a) %in% rownames(a2),]#drop other values
a<-a[!is.na(a$Creatinine),]
length(a$PatientID) #Remaining entries after removing missing values
#230159
########################################################################## CHECKED

require(dplyr)
sorted <- a %>% 
          arrange(PatientID,event.date) %>%
          group_by(PatientID) %>%
          mutate(protagonist=row_number())
a<-data.frame(sorted)
attach(a)

#GIVE EACH TEST AN ORDER NUMBER PER PATIENT SO WE CAN LATER LOOP THROUGH THEM
####################################################################################### CHECKED
# PART 2 - LOOP FOR AKI FLAGS 
#LOOP FORMATION FOR COMPARING EACH TEST WITH PREVIOUS TESTS
#CREATE A MARKER VARIABLE FOR EACH TIME AKI EALERT CRITERIA SATISFIED

newAKI<-0
AKIyear<-0
AKIweek<-0
max(protagonist) #number of loop iterations needed.

#LOOP for x values, where x = the highest number of tests a patient had in the index year (max(protagonist)) 
mightydate<-NA
mightyvalue<-NA
protagonistdos<-NA
yearmarker<-0
weekmarker<-0
Dmarker<-0
yearmeedian<-0
weekmin<-0
Dmin<-0
yearvalue<-0
weekvalue<-0
Dvalue<-0
protagonistdos<-0
protagonistvalue<-0


 if(Gender[i]=="M"){    
    ref.low=62
    ref.up=115
    } else {    
    ref.low=44
    ref.up=97}
   
a <-a[order(PatientID, event.date),] 
attach(a)

############################################################################################################# CHECKED
pb<-tkProgressBar(title="Identifying AKI events",min=0,max=max(protagonist),width=300) #indicates progress through the loop
for (i in 1:max(protagonist)) {
setTkProgressBar(pb,i,label=paste(round(i/max(protagonist)*100, 0),"% done"))
mightydate<-as.Date(ifelse(protagonist==protagonist[i] & PatientID==PatientID[i],event.date[i],mightydate),origin="1970-01-01")
protagonistdos<-ave(mightydate,PatientID,FUN=max)
#Apply each test date to all other tests from the same patient to find the time difference

yearmarker[i]<-ifelse(as.Date(protagonistdos)-event.date[i]<=365 & (protagonistdos-event.date[i]>90),1,yearmarker)
weekmarker[i]<-ifelse(as.Date(protagonistdos)-event.date[i]<=7 & (protagonistdos-event.date)[i]>=0,1,weekmarker) 
Dmarker[i]<-ifelse(as.Date(protagonistdos)-event.date[i]<=2 & (protagonistdos-event.date)[i]>=0,1,Dmarker) 

yearvalue[i]<-ifelse(yearmarker[i]==1,Creatinine[i],NA)
weekvalue[i]<-ifelse(weekmarker[i]>0,Creatinine[i],NA)
Dvalue[i]<-ifelse(Dmarker[i]>0,Creatinine[i],NA)

#apply the optimal reference creatinine (which will later be chosen from yearmedian, weekmin or Dmin) across all of a patient's samples
yearmedian[i]<-ave(as.numeric(yearvalue),PatientID==PatientID,FUN = function(x) median(x, na.rm = TRUE))
weekmin[i]<-ave(as.numeric(weekvalue),PatientID==PatientID,FUN = function(x) min(x, na.rm = TRUE))
Dmin[i]<-ave(as.numeric(weekvalue),PatientID==PatientID,FUN = function(x) min(x, na.rm = TRUE))

##########################################################################################################CHECKED
#finds the index (investigated) creatinine of key interest, applies this value across all patient samples
mightyvalue<-NA
mightyvalue[i]<-Creatinine[i]
protagonistvalue<-ave(mightyvalue,PatientID,FUN = function(x) max(x, na.rm = TRUE))

#Finds the 48 hour difference in 2 samples taken within a 48 hour window
D[i]<-ifelse(as.numeric(Dmarker[i])>0,abs(Creatinine[i]-Dvalue[i]),NA)
RV1<-NA
RV2<-NA
RV_ratio<-NA

##################################################################################################################### CHECKED

RV1[i]<-mightyvalue[i]/weekmin[PatientID==PatientID]
RV2[i]<-mightyvalue[i]/yearmedian[PatientID==PatientID]
RV_ratio[i]<-ifelse(RV1[i]>RV2[i],RV1[i],RV2[i]) 

AKIyear[i]<-ifelse((mightyvalue[i]/yearmedian[i])>=1.5 & !is.na(yearmedian[i]) & (mightyvalue[i]>(3*RV_ratio[i])|RV_ratio[i]>=1.5),1,0)
AKIweek[i]<-ifelse((mightyvalue[i]/weekmin[i])>=1.5 & !is.na(weekmin[i]) & (mightyvalue[i]>(3*RV_ratio[i])|RV_ratio[i]>=1.5),1,0)
AKIyear[i]<-ifelse(is.na(AKIyear[i]) & !is.na(yearmedian[i]) & RV_ratio[i]<1.5 & D[i]>26,1,AKIyear[i])
AKIweek[i]<-ifelse(is.na(AKIweek[i]) & !is.na(weekmin[i]) & RV_ratio[i]<1.5 & D[i]>26,1,AKIweek[i])}

#END OF LOOP
close(pb)

####
#Identify AKI here

AKIcounter<-ifelse(AKIyear==1|AKIweek==1,1,0)

############################################################################################################################

#DIVIDE AKI INTO 90 DAY SESSIONS
#Assign an akicounter value of 1 to all AKI blood tests
a <- a[order(PatientID,AKIcounter,event.date),]
attach(a)



require(dplyr)
sort <- a %>% 
          arrange(PatientID,akicounter) %>%
          group_by(PatientID) %>%
          mutate(countaki=row_number())
a<-data.frame(sorted)
attach(a)





#Add +1 to aki counter if the date of the sample was >90 days after the first sample with an akicounter value of 1
for(x in 1:110)){
counterdate[x]<-min(event.date[AKIcounter==AKIcounter[x]&PatientID==PatientID[x]])}
a$AKIcounter[x]<-ifelse(as.numeric(event.date[x])-90>(as.numeric(counterdate[x]))&AKIcounter==AKIcounter[x],AKIcounter[x-1]+1,AKIcounter[x-1])
}

#Repeat for up to 110 episodes (or 110 90 day AKI periods, which equates to 27 years- the span of our CPRD data)
#MARK FIRST AKI AND ITS CONSTITUENT PARTS

a<-a[with(a, order(PatientID,AKIcounter,event.date)),]
attach(a)
a$AKIspellcounter<-ave(AKIcounter,PatientID,FUN = seq_along)#nth AKI blood test within each AKI episode


a <- a[with(a,order(PatientID,newAKI,AKIspellcounter event.date)),]
a$AKIcount<-AKIcounter
attach(a)
firstAKI<-ifelse(newAKI==1& AKIspellcounter==1& yr03==1&AKIspellcounter==min(AKIspellcounter),1,NA)
#Marks the first qualifying test of each episode

#Use dplyr to sum the numbers of AKIs per patient

##############################################################################################################################



