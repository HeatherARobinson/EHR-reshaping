memory.size(50000)
load ("sir.data.rda")
load("datasource.rda")
#READ CONDITION FILES- SUFFIX ALL NAMES WITH A 1 THEN YOU CAN IMPORT THEM ALL TOGETHER

library(zoo)
library(plyr)
library(tidyverse)
library(zoo)
library(data.table)
library(survival)
library(lubridate)

####################################################

temp = list.files(pattern="*1.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))

#SELECT PATIENTS WHO WERE 18 OR ABOVE AT THE TIME OF HEART FAILURE DIAGNOSIS
hf<-sir.data[sir.data$ReadCode %in% HeartFailure1.csv$ReadCode,]
length(unique(as.factor(hf$PatientID))) #7254 total heart failure patients identified with confirmed Read Codes (V2)

hf$Age<-(as.numeric(year(strptime(hf$EntryDate, format="%Y%m%d"))))-hf$BirthYear
hf$hfage<-hf$Age
smalltab<-hf[,c("PatientID","hfage")]

first<-smalltab %>% group_by(PatientID) %>%
summarize(hfage = min(as.numeric(hfage)))
head(first)
sir.data<-merge(sir.data,as.data.frame(first),all.x=TRUE)
sir.data<-sir.data[sir.data$hfage>=18,]
length(unique(as.factor(sir.data$PatientID))) #7208  hf patients who were 18 or over at first diagnosis

save(sir.data,file="sirdatahfonly.rda") #full patient records from all adult hf patients from all years

#SELECT PATIENTS WITH CREATININE DATA
sir.data[sir.data$ReadCode=="44J3.",]->crea 
length(unique(as.factor(crea$PatientID))) # 6972 hf patients over 18 at diagnosis with creatinine data

#REMOVE DIALYSIS PATIENTS
dialysis<-sir.data[sir.data$ReadCode %in% Dialysis1.csv$ReadCode,]
levels(as.factor(dialysis$PatientID)) #71 dialysis patients will be removed
crea<-crea[!crea$PatientID %in% dialysis$PatientID,]

#DATA CLEANING

crea$Creatinine<-ifelse(crea$ReadCode=="44J3.",as.numeric(crea$CodeValue),NA) #Any non numeric values are marked NA
length(crea$PatientID) #DELAYED CR. DUP
which(crea$CodeValue>0&crea$CodeValue>0<18) # x creatinine values less than 18 -ARE THESE FROM OLD ASSAY?
head(crea[which(crea$CodeValue>0&crea$CodeValue>0<18)]) 
crea[-which(crea$CodeValue<18),] -> crea # creatinine values less than 18 considered not valid

crea<-merge(crea,sir.datasource,all.x=TRUE)
crea$Source<-ifelse(crea$Source=="salfordt",paste("Hospital"),paste("GP"))
crea$Source<-ifelse(is.na(crea$Source),paste("GP"),crea$Source)



#REMOVE SAME DAY AND DELAYED CREATININE ENTRIES
names(crea)
length(crea$PatientID)
crea<-crea[!(duplicated(crea[,c(1,2,4,6)])),] #REMOVES SAME DAY DUPLICATES (SAME PATIENT, DATE, VALUE)
length(crea$PatientID) #SAME DAY - leaves 21814175 non duplicate records OF 55309368 (39%).

as.numeric(as.character(crea$CodeValue)) -> crea$CodeValue
(as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d")))) -> year
(as.numeric(month(strptime(crea$EntryDate, format="%Y%m%d")))) -> month
(as.numeric(day(strptime(crea$EntryDate, format="%Y%m%d")))) -> day
crea$EntryPeriod<-paste(month,year)
names(crea)

d<-sir.data[duplicated(sir.data[,c(1,2,6,15)])&sir.data$ReadCode %in% Pathology1.csv$ReadCode,c(1,2,6,7,15)]
d<-unique(d[order(as.Date(d$EntryDate,format="%Y%m%d")),,drop=FALSE,fromLast=FALSE]) #REMOVES DELAYED CREATININE DUPLICATES BASED ON SAME VALUE AND CALENDAR MONTH BUT DIFFERENT SOURCE LOCATION
#THE EARLIEST OF THE DUPLICATES IS KEPT.


#SELECT HIGHEST DAILY CREATININE IF MULTIPLE ENTRIES AFTER REMOVING DELAYED DUPLICATES AND OUT OF RANGE VALUES

smalltab<-crea[,c("PatientID","Creatinine", "EntryDate")]
maxcrea<-smalltab %>% group_by(PatientID, EntryDate) %>%
summarize(Creatinine = max(Creatinine))
crea$Creatinine<-ifelse(crea$PatientID %in% maxcrea$PatientID & crea$EntryDate %in% maxcrea$EntryDate, maxcrea$Creatinine, crea$Creatinine)

head(smalltab[with(smalltab, order(PatientID, EntryDate)),])
head(maxcrea[with(maxcrea, order(PatientID, EntryDate)),])

#ASSIGN AGE
crea$Age<-(as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d"))))-crea$BirthYear

#Create a date format entry date
(as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d")))) -> year
(as.numeric(month(strptime(crea$EntryDate, format="%Y%m%d")))) -> month
(as.numeric(day(strptime(crea$EntryDate, format="%Y%m%d")))) -> day
as.Date.character(paste(year,month,day,sep="-")) -> crea$event.date

#LIMIT TO PATIENTS WITH AT LEAST 1 POST 2008 CREATININE TEST VALUES
crea$EntryDate <- as.Date(as.character(crea$EntryDate, "%Y%m%d"))
crea<-crea[as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d")))>=2008,]
table(crea$PatientID) < 2 -> rare  
rownames(as.matrix(rare)) -> ids
table(rare)
crea[!(crea$PatientID %in% ids[rare]),] -> crea.rep	
levels(unique(as.factor(crea$PatientID))) # non dialysis adult hf patients have 2 or more post 2008 creatinine tests

######################################################
#Add demographic variables from lookup tables

#LSOA and age already added in SIR

#CODE ETHNICITY
ethnic.data<-read.table("ethnic.data.csv",header=TRUE,sep=",")
ethnic.data$Category<-floor(ethnic.data$Category)
crea.rep<-merge(crea.rep,ethnic.data,by.x="Ethnicity",by.y="ClinCode2",all.x=TRUE, all.y=FALSE)
names(crea.rep)
crea.rep<-subset(crea.rep, select=-c(Ethnicity,ClinCode1,ReligionDescription,MaritalStatus))
colnames(crea.rep)[which(names(crea.rep) == "Category")] <- "Ethnicity"

levels(unique(as.factor(crea.rep$PatientID))) #6923 remaining if no range limit

#Breakpoint
#######################################################
#######################################################
save(crea.rep, file = "crea.rephfonly.Rdata")
save(sir.data, file = "sir.datahfonly.Rdata")
#######################################################


#CHECK PATIENTS WHICH HAVE AT LEAST 2 TESTS, OPTION FOR TIME RANGE RESTRICTION
#aggregate(as.numeric(year(strptime(crea.rep$event.date, format="%Y-%m-%d"))), list(crea.rep$PatientID), range) -> ranges
#ranges$x[,2] - ranges$x[,1] -> ranges$range
#ranges[(which(ranges$range<1)),1] -> range_short_ids    # define exclusion range if time range restriction needed
#crea.rep[-which(crea.rep$PatientID %in% range_short_ids),]->crea.rep 
crea.rep<-crea.rep[ crea.rep$PatientID %in%  names(table(crea.rep$PatientID))[table(crea.rep$PatientID)>=2] , ] # define min tests

sir.data<-sir.data[which(sir.data$PatientID %in% crea.rep$PatientID),]  #x hr patients remaining with 2 tests or more, 1 post 2008

#######################################################
#Breakpoint
#######################################################
#######################################################
save(crea.rep, file = "crea.rep2tests.Rdata")
save(sir.data, file = "sir.data2tests.Rdata")
#######################################################

#ADD IN VARIOUS CONDITIONS AND FLAGS FROM MAIN EHR FILES USING OTHER R SCRIPT IN SAME FOLDER
#ADD PRESCRIPTION DATA USING OTHER R SCRIPT IN SAME FOLDER

#Narrow lookup table to the full list of codes of interest to speed up processing
#temp = list.files(pattern="*1.csv")
#for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
#merged <- Reduce(function(x, y) merge(x, y, all=TRUE), 
#list(AF1.csv,BMI1.csv,BNP1.csv,BUN1.csv,cessation1.csv,DBP1.csv,Diabetes1.csv,Dialysis1.csv,Haemoglobin1.csv,HeartFailure1.csv, HeartRate1.csv,IHD1.csv,MCV1.csv,Nephrectomy1.csv,NTPROBNP1.csv,PVD1.csv,RM1.csv,SBP1.csv,SerumAlbumin1.csv,SerumPotassium1.csv,SerumSodium1.csv,smoking1.csv,transplant1.csv,UACR1.csv,UAlbumin1.csv,UricAcid1.csv))
#sir.data<-sir.data[which(sir.data$PatientID %in% crea.rep$PatientID & sir.data$ReadCode %in% merged$ReadCode),]

##########################################################################

