Open MobaXTerm
ssh username@incline256.itservices.manchester.ac.uk
(enter password this does not print on screen!)
module load apps/binapps/stata/14-iph
stata

module load apps/gcc/R/3.3.3
module load apps/binapps/rstudio/0.98.983-any-r
rstudio

require(haven)
require(gtools)
library(zoo)
library(plyr)
library(tidyverse)
library(data.table)
library(survival)
library(lubridate)

CPRD3<-read_dta("hf_cases_test.dta") 

#head(CPRD[CPRD$medcode=="5",]) #Only 2312 #References some dates of creatinine measures but no additional data
crea<-CPRD3[CPRD3$medcode=="5",] #1579351 #This is the file with the creatinine values in

#this is the file of Creatinine entries to be used as a reference 
#####################################################################################################
#SELECTING FOR HEART FAILURE
#SELECT PATIENTS WHO WERE 18 OR ABOVE AT THE TIME OF HEART FAILURE DIAGNOSIS

#Add hfage for selection

CPRD4<-read_dta("hf_cases_patient_practice_incidentHFdate.dta")  
CPRD4$hfage<-(as.numeric(year(strptime(CPRD4$eventdate, format="%Y-%m-%d"))))-CPRD4$yob
CPRD4$hfage<-ifelse(as.numeric(month(strptime(CPRD4$eventdate, format="%Y-%m-%d")))>CPRD4$mob&CPRD4$mob>0,CPRD4$hfage-1,CPRD4$hfage)
CPRD4<-CPRD4[,c(1:8,18,19)]
head(CPRD4[duplicated(CPRD4$patid),]) 
#None of the records are duplicated- each gives the hfdate based on 97 hf codes

CPRD4<-CPRD4[CPRD4$hfage>=18,]
save(CPRD4,file="CPRD4.rda")
hfnames<-unique(CPRD4$patid)
length(hfnames) 
#282219

crea<-crea[crea$patid %in% hfnames,] 
CPRD4<-CPRD4[,c(1,6:10)]
CPRD4<-as.data.frame(CPRD4)
crea<-as.data.frame(crea)
crea<-merge(crea,CPRD4,all.x=TRUE,all.y=FALSE)
save(crea, file = "crea.Rdata") 

##################################################################################################### 
#START WITH A SKELETON OF CREATININE VALUES THEN ADD ON TO IT.

#Remove outliers then order and select the highest value per day
crea<-crea[!is.na(crea$data2),]
crea<-crea[order(-crea$data2),]

smalltab<-crea %>%
group_by_(.dots=c("patid","eventdate")) %>% 
summarize(Creatinine = mean(data2)) %>%
ungroup()%>%
as.data.frame
crea<-merge(crea,as.data.frame(smalltab),all.x=TRUE)

save(crea, file = "crea2.rda") 

#######################################################################################################up to here
#CHECK UNITS IN CASE VALUES NEED CONVERTING

#C<-unique(crea$data3) 
#Should be 142(umol/L). Lookups for units are in the text file 'SUM.txt'
#write.csv(C,file="SUMcrea.csv")
#HAND ANNOTATE WITH CONVERSION FACTORS

C<-read.csv("SUMcrea.csv")
colnames (C)[1]<-"data3"
crea<-merge(crea,C[,c(1,3,4)],all.x=TRUE,all.y=FALSE)
save(crea, file = "crea2.rda") 
#BIND ON UNITS OF MEASUREMENT

#CONVERT PROBLEMATIC UNITS
#crea$data2<-ifelse(!crea$CodeUnits=="umol/L",(crea$data2*crea$Times),crea$data2)
#1477308 values at this stage
#ALTHOUGH I TESTED THIS THE MMOL/L UNITS JUST SEEM TO BE MISNAMED-ALL ARE IN RANGE AND WE LOSE TOO MUCH DATA IF WE CONVERT THEM THEN CUT THEM OUT.

#CUTOFF IMPLAUSIBLE VALUES
crea<-crea[crea$data2>=20&crea$data2<=3000,]
#1422167 rows remaining

save(crea, file = "crea2.rda")
length(levels(as.factor(crea$patid)))
#120731 patients

########################################################################################################
#Add birth and death and basic formulaic variables
crea$Dead<-ifelse(!is.na(crea$deathdate),1,0)
#The death dates are not reliable, many of them are before 1950 and 100 are before 1980.

crea$Age<-(as.numeric(year(strptime(crea$eventdate, format="%Y-%m-%d"))))-crea$yob
crea$Age<-ifelse(as.numeric(month(strptime(crea$eventdate, format="%Y-%m-%d")))>crea$mob&crea$mob>0,crea$Age-1,crea$Age)
save(crea, file = "crea2.rda")
crea$log_CREA<-log(crea$Creatinine)

colnames(crea)[2] <- "PatientID"
colnames(crea)[3] <- "event.date"
colnames(crea)[18] <- "Gender"
crea<-crea[,c(2,3,8,21:26,28)]
save(crea, file = "crea2.rda")
######################################################################################################## CHECKED

#Add demographic variables from lookup tables
CPRD2<-read_dta("hf_cases_clinical.dta")  

#CODE ETHNICITY
eth<-read.table("ethnicitycprd.csv",header=TRUE,sep=",")
eth<-eth[,c(1,5)]
WHICH TABLE ARE THE ETH MEDCODES IN?
CPRD2<-merge(CPRD2,eth,by.x="medcode",by.y="medcode",all=TRUE)
C2<-CPRD2[!is.na(CPRD2$Category),]

table(C2$Category)

#The only medcodes present are 22953 and 12351.
#also 23955 generic code x1

#DRAW INFORMATION ON 23955 FROM LOOKUP TABLE

############################################################################################################ONGOING


#COHORT SELECTION
#LIMIT TO PATIENTS WITH AT LEAST 2 POST 2008 CREATININE TEST VALUES
crea<-crea[as.numeric(year(strptime(crea$event.date, format="%Y-%m-%d")))>=2008,]
table(crea$PatientID) < 2 -> rare  
rownames(as.matrix(rare)) -> ids
table(rare)
crea[!(crea$PatientID %in% ids[rare]),] -> crea.rep	
levels(unique(as.factor(crea.rep$PatientID))) # 6589 non-dialysis adult hf patients have 2 or more post-2008 creatinine tests
length(crea.rep$PatientID) #284233 remaining
sir.data<-sir.data[sir.data$PatientID %in% crea.rep$PatientID,]
#Breakpoint
#######################################################
save(crea.rep, file = "crea.rephf2tests.Rdata")
save(sir.data, file = "sir.datahf2tests.Rdata")
#######################################################

#ADD IN VARIOUS CONDITIONS AND FLAGS FROM MAIN EHR FILES USING R SCRIPT IN SAME FOLDER
#ADD PRESCRIPTION DATA USING R SCRIPT IN SAME FOLDER

#Narrow lookup table to the full list of codes of interest to speed up processing
#temp = list.files(pattern="*1.csv")
#for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
#merged <- Reduce(function(x, y) merge(x, y, all=TRUE), 
#list(AF1.csv,BMI1.csv,BNP1.csv,BUN1.csv,cessation1.csv,DBP1.csv,Diabetes1.csv,Dialysis1.csv,Haemoglobin1.csv,HeartFailure1.csv, HeartRate1.csv,IHD1.csv,MCV1.csv,Nephrectomy1.csv,NTPROBNP1.csv,PVD1.csv,RM1.csv,SBP1.csv,SerumAlbumin1.csv,SerumPotassium1.csv,SerumSodium1.csv,smoking1.csv,transplant1.csv,UACR1.csv,UAlbumin1.csv,UricAcid1.csv))
#sir.data<-sir.data[which(sir.data$PatientID %in% crea.rep$PatientID & sir.data$ReadCode %in% merged$ReadCode),]

##########################################################################
#FROM VERSIONS 061217 onwards:
#SELECT PATIENTS WHICH HAVE AT LEAST 2 TESTS, OPTION FOR TIME RANGE RESTRICTION
library(lubridate)
sir.data$event.date<-as.Date(as.character(sir.data$EntryDate),format="%Y%m%d")

aggregate(as.numeric(year(strptime(sir.data$event.date, format="%Y-%m-%d"))), list(sir.data$PatientID), range) -> ranges
ranges$x[,2] - ranges$x[,1] -> ranges$range
ranges[(which(ranges$range<2)),1] -> range_short_ids    # define exclusion range as 2 years
crea.rep[-which(crea.rep$PatientID %in% range_short_ids),]->crea.rep 
unique(crea.rep$PatientID)#5950
save(crea.rep,file="crea.rep2yrsall.rda")

CPRDinput<-file(paste("CPRD_input.csv"), open="w")
cat("Patient_ID","Date","Age","Gender","Ethnicity","Medcode","data1","data2","data3","data4","data5","data6","data7","data8","DataSource","Source","\n", sep=",",file="CPRD_input.csv",append=TRUE)
for (n in 1:8025802){ #Change loop number to number of records in dataset
cat((paste(CPRD.data6$patid[n])), (paste(CPRD.data6$eventdate[n])), (paste(CPRD.data6$Age[n])), (paste(CPRD.data6$gender[n])), (paste(CPRD.data6$Category[n])),(paste(CPRD.data6$medcode[n])),(paste(CPRD.data6$data1[n])), (paste(CPRD.data6$data2[n])),(paste(CPRD.data6$data3[n])), (paste(CPRD.data6$data4[n])), (paste(CPRD.data6$data5[n])), (paste(CPRD.data6$data6[n])),(paste(CPRD.data6$data7[n])),(paste(CPRD.data6$data8[n])),(paste(CPRD.data6$DataSource[n])), (paste(CPRD.data6$Source[n])), "\n", file="CPRD_input.csv", sep=",", fill=FALSE, labels=NULL, append=TRUE)}

#FREEZE OF CPRD.DATA6
load("myDF.Rdata")

CPRD.data6$Creatinine<-ifelse(CPRD.data6$medcode=="5",as.numeric(CPRD.data6$data2),NA)
#Any non-numeric values are marked NA
CPRD.data6$LogCreatinine<-log10(CPRD.data6$Creatinine)
CPRD.data6$Creatinine<-ifelse(CPRD.data6$Creatinine<18,NA,CPRD.data6$Creatinine)  # creatinine values less than 18 considered not valid

#Check HF cohort
HF<-read.csv("HeartFailure.csv")
HFs<-CPRD.data[CPRD.data$medcode %in% HF$Medcode,]
length(unique(as.factor(HFs$patid))) #121766 patients with a post 2008 creatinine test and a HF diagnosis based on codes

#Add LVEF values

LV<-CPRD.data[CPRD.data$medcode==30918 & CPRD.data$data2>=40,] #Find patients with impaired LVEF
LVEF<-CPRD.data[CPRD.data$patid %in% LV$patid,]
length(unique(as.factor(LVEF$patid))) #24 patients with a post 2008 creatinine test and an impaired LVEF
LVEF2<-CPRD.data[CPRD.data$patid %in% LV$patid & CPRD.data$patid %in% HFs$patid,]
length(unique(as.factor(LVEF2$patid))) #24 patients with a post 2008 creatinine test, HF code and a LVEF based on codes

#All of the LVEF qualifying patients also had a HF code.

#Add BNP values
BNP<-read.csv("BNP.csv")
BNPs<-CPRD.data[(CPRD.data$medcode %in% BNP$Medcode[BNP$Sensitive==1] & CPRD.data$data2>=2000)|(CPRD.data$medcode %in% BNP$Medcode[BNP$Sensitive==0] & CPRD.data$data2>=100),] #Find patients with impaired LVEF
BN<-CPRD.data[CPRD.data$patid %in% BNPs$patid,]
length(unique(as.factor(BN$patid))) #9374 patients with a post 2008 creatinine test and a high BNP
BN2<-CPRD.data[CPRD.data$patid %in% BNPs$patid & CPRD.data$patid %in% HFs$patid,]
length(unique(as.factor(BN2$patid))) #9328 patients with a post 2008 creatinine test, HF code and a BNP based on codes

#46 of the BNP qualifying patients were missing a HF code.

#Test speculative HF codes
HFs2<-CPRD.data[CPRD.data$medcode %in% HF$Medcode[HF$Speculative==0],]
length(unique(as.factor(HFs2$patid))) #109748 patients with a post 2008 creatinine test and a HF diagnosis based on codes



