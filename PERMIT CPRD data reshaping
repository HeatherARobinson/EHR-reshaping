OOpen MobaXTerm
ssh mqbpjhr4@incline256.itservices.manchester.ac.uk
(enter password this does not print on screen!)
module load apps/binapps/stata/14-iph
stata

module load apps/gcc/R/3.3.3
module load apps/binapps/rstudio/0.98.983-any-r
rstudio

require(haven)
require(gtools)
library(zoo)
library(plyr)
library(tidyverse)
library(data.table)
library(survival)
library(lubridate)
CPRD2<-read_dta("hf_cases_clinical.dta") 
CPRD3<-read_dta("hf_cases_test.dta") 
CPRD5<-read_dta("hf_cases_additional.dta") 
#head(CPRD[CPRD$medcode=="5",]) #Only 2312 #References some dates of creatinine measures but no additional data
#crea<-CPRD3[CPRD3$medcode=="5",] #1579351 #This is the file with the creatinine values in
load("creaongoing.rda")
#this is the file of Creatinine entries to be used as a reference 
#####################################################################################################
#SELECTING FOR HEART FAILURE
#SELECT PATIENTS WHO WERE 18 OR ABOVE AT THE TIME OF HEART FAILURE DIAGNOSIS

#Add hfage for selection

CPRD4<-read_dta("hf_cases_patient_practice_incidentHFdate.dta")  
CPRD4$hfage<-(as.numeric(year(strptime(CPRD4$eventdate, format="%Y-%m-%d"))))-CPRD4$yob
CPRD4$hfage<-ifelse(as.numeric(month(strptime(CPRD4$eventdate, format="%Y-%m-%d")))>CPRD4$mob&CPRD4$mob>0,CPRD4$hfage-1,CPRD4$hfage)
CPRD4<-CPRD4[,c(1:8,18,19)]
head(CPRD4[duplicated(CPRD4$patid),]) 
#None of the records are duplicated- each gives the hfdate based on 97 hf codes

CPRD4<-CPRD4[CPRD4$hfage>=18,]
save(CPRD4,file="CPRD4.rda")
hfnames<-unique(CPRD4$patid)
length(hfnames) 
#282219

crea<-crea[crea$patid %in% hfnames,] 
CPRD4<-CPRD4[,c(1,6:10)]
CPRD4<-as.data.frame(CPRD4)
crea<-as.data.frame(crea)
crea<-merge(crea,CPRD4,all.x=TRUE,all.y=FALSE)
save(crea, file = "crea.Rdata") 

##################################################################################################### 
#START WITH A SKELETON OF CREATININE VALUES THEN ADD ON TO IT.

#Remove outliers then order and select the highest value per day
crea<-crea[!is.na(crea$data2),]
crea<-crea[order(-crea$data2),]

smalltab<-crea %>%
group_by_(.dots=c("patid","eventdate")) %>% 
summarize(Creatinine = mean(data2)) %>%
ungroup()%>%
as.data.frame
crea<-merge(crea,as.data.frame(smalltab),all.x=TRUE)

save(crea, file = "crea2.rda") 

#######################################################################################################up to here
#CHECK UNITS IN CASE VALUES NEED CONVERTING

#C<-unique(crea$data3) 
#Should be 142(umol/L). Lookups for units are in the text file 'SUM.txt'
#write.csv(C,file="SUMcrea.csv")
#HAND ANNOTATE WITH CONVERSION FACTORS

C<-read.csv("SUMcrea.csv")
colnames (C)[1]<-"data3"
crea<-merge(crea,C[,c(1,3,4)],all.x=TRUE,all.y=FALSE)
save(crea, file = "crea2.rda") 
#BIND ON UNITS OF MEASUREMENT

#CONVERT PROBLEMATIC UNITS
#crea$data2<-ifelse(!crea$CodeUnits=="umol/L",(crea$data2*crea$Times),crea$data2)
#1477308 values at this stage
#ALTHOUGH I TESTED THIS THE MMOL/L UNITS JUST SEEM TO BE MISNAMED-ALL ARE IN RANGE AND WE LOSE TOO MUCH DATA IF WE CONVERT THEM THEN CUT THEM OUT.

#CUTOFF IMPLAUSIBLE VALUES
crea<-crea[crea$data2>=20&crea$data2<=3000,]
#1422167 rows remaining

save(crea, file = "crea2.rda")
length(levels(as.factor(crea$patid)))
#120731 patients

########################################################################################################
#Add birth and death and basic formulaic variables
crea$Dead<-ifelse(!is.na(crea$deathdate),1,0)
#The death dates are not reliable, many of them are before 1950 and 100 are before 1980.

crea$Age<-(as.numeric(year(strptime(crea$eventdate, format="%Y-%m-%d"))))-crea$yob
crea$Age<-ifelse(as.numeric(month(strptime(crea$eventdate, format="%Y-%m-%d")))>crea$mob&crea$mob>0,crea$Age-1,crea$Age)
save(crea, file = "crea2.rda")
crea$log_CREA<-log(crea$Creatinine)

colnames(crea)[2] <- "PatientID"
colnames(crea)[3] <- "event.date"
colnames(crea)[18] <- "Gender"
crea<-crea[,c(2,3,8,21:26,28)]
save(crea, file = "crea2.rda")
######################################################################################################## CHECKED

#Add demographic variables from lookup tables
CPRD2<-read_dta("hf_cases_clinical.dta")  


#CODE ETHNICITY
eth<-read.table("ethnicitycprd.csv",header=TRUE,sep=",")
eth<-eth[,c(1,5)]
WHICH TABLE ARE THE ETH MEDCODES IN?
CPRD2<-merge(CPRD2,eth,by.x="medcode",by.y="medcode",all=TRUE)
CPRD2<-CPRD2[!is.na(CPRD2$Category),]

table(CPRD2$Category)
CPRD2<-CPRD2[,c(2,12)]
CPRD2<-unique(CPRD2)
head(CPRD2[duplicated(CPRD2),])
#THERE ARE NO PATIENTS WITH CONFLICTING ETHNICITY CODES

colnames(CPRD2)[1] <- "PatientID"
colnames(CPRD2)[2] <- "Ethnicity"
crea<-merge(crea,CPRD2,all.x=TRUE)

save(crea,file="crea2.rda")

#CHECK ALSO FOR 23955 generic code x1
#DRAW INFORMATION ON 23955 FROM LOOKUP TABLE
CPRD2<-read_dta("hf_cases_clinical.dta")  
C2<-CPRD2[CPRD2$medcode=="23955",]
table(C2$adid) #Not linked to text

#################################################################################################################
#COHORT SELECTION
#LIMIT TO PATIENTS WITH AT LEAST 2 (POST 2008?) CREATININE TEST VALUES
#crea<-crea[as.numeric(year(strptime(crea$event.date, format="%Y-%m-%d")))>=2008,]
table(crea$PatientID) < 2 -> rare  
rownames(as.matrix(rare)) -> ids
table(rare)
crea[!(crea$PatientID %in% ids[rare]),] -> crea.rep	
levels(unique(as.factor(crea.rep$PatientID))) # 198543 adult hf patients have 2 or more creatinine tests
length(crea.rep$PatientID) #1579775 rows remaining

save(crea.rep,file="crea.rep.rda")

############################################################################################################ONGOING
#Add LSOA

IMD<-read.csv("patient_imd2010_16_241RMnA.txt",sep="\t")
IMD<-IMD[,c(1,3)]
colnames(IMD)<-c("PatientID","IMD_Decile2010")
crea<-merge(crea,IMD,all.x=TRUE)

#Breakpoint
#################################################################################################################
#ADD CONDITIONAL VARIABLES
library(dplyr)
#ADD BMI
#Call the data fields that go with the clinical table from the 'additional' table using enttype and adid.

#There are some in test, also some in clinical, 
BMI<-read.csv("BMI1.csv")
C<-(CPRD3[CPRD3$medcode %in% BMI$Medcode,c(1,2,11)])
C<-as.data.frame(C)
colnames(C)[1] <- "PatientID"
colnames(C)[3] <- "BMI"

C2<-(CPRD2[CPRD2$medcode %in% BMI$Medcode | CPRD2$enttype==13,])
C2<-as.data.frame(C2)
C2<-merge(C2,CPRD5,all.x=TRUE,all.y=FALSE) 
colnames(C2)[1] <- "PatientID"
C2<-C2[!is.na(C2$data3),]
C2<-C2[,c(1,4,14)]
colnames(C2)[3] <- "BMI"
C<-rbind(C,C2)

#CLOSEST DAILY BMI MEAN #1YR DATE FLAG
BMItab<-C[C$BMI>=10 & C$BMI<=70,]
firstA <-BMItab %>% 
group_by(PatientID,eventdate) %>%
summarize(BMI=mean(BMI)) %>%
as.data.frame

indx1 <- neardate(crea$PatientID, firstA$PatientID, crea$event.date, firstA$eventdate, best="prior")
crea$BMI<-firstA[indx1, "BMI"]
crea$BMIDateFlag<- ifelse(as.numeric(abs(crea$event.date - firstA$eventdate[indx1])) >365, 1, 0)
table(crea$BMIDateFlag) 
a<-crea[!is.na(crea$BMI),]
length(a$PatientID) 
crea$BMI<-unlist(crea$BMI)
save(crea,file="creaongoing.rda")
rm(a)
#IF BMI IS MISSING WE CAN CALCULATE IT.

Height<-read.csv("Height1.csv")
H<-(CPRD2[CPRD2$medcode %in% Height$Medcode,])
H<-as.data.frame(H)
H<-merge(H,CPRD5,all.x=TRUE,all.y=FALSE) 
H<-H[,c(1,4,12)]
colnames(H)[3] <- "Height"

#Near data match each creatinine record to the last (tallest) recorded height and the most recent weight
firstH<-H %>% 
group_by(patid) %>%
summarize(Height=max(Height)) %>%
as.data.frame
crea<-merge(crea,firstH)
crea$Height<-unlist(crea$Height)
save(crea,file="creaongoing.rda")
rm(firstH)

W<-(CPRD2[CPRD2$medcode %in% Weight1.csv$Medcode,])
W<-as.data.frame(W)
CPRD5<-read_dta("hf_cases_additional.dta") 
W<-merge(W,CPRD5,all.x=TRUE,all.y=FALSE) 
#Call the data fields that go with the clinical table from the 'additional' table using enttype and adid.
W<-W[,c(1,4,12)]
colnames(W)<- c("PatientID","entrydate","Weight")

indx1 <- neardate(crea$PatientID, W$PatientID, crea$event.date, W$eventdate, best="prior")
crea$Weight<-W[indx1, "Weight"]
crea$Weightdate<-W[indx1,"entrydate"
crea$Weight<-unlist(crea$Weight)
crea$Weightdate<-unlist(crea$Weightdate)

crea$BMIDateFlag<-ifelse(is.na(crea$BMIDateFlag)&!is.na(crea$Height)&!is.na(crea$Weight)&(as.numeric(abs(crea$event.date - crea$Weightdate))>365),1,crea$BMIDateFlag)
crea$BMI<-ifelse(is.na(crea$BMI&!is.na(crea$Height)&!is.na(crea$Weight),(crea$Weight/(crea$Height^2)),crea$BMI)

##########################################################################

#SELECT PATIENTS WHICH HAVE AT LEAST 2 TESTS AND AT LEAST 2 YEARS DATA
library(lubridate)
sir.data$event.date<-as.Date(as.character(sir.data$EntryDate),format="%Y%m%d")

aggregate(as.numeric(year(strptime(sir.data$event.date, format="%Y-%m-%d"))), list(sir.data$PatientID), range) -> ranges
ranges$x[,2] - ranges$x[,1] -> ranges$range
ranges[(which(ranges$range<2)),1] -> range_short_ids    # define exclusion range as 2 years
crea.rep[-which(crea.rep$PatientID %in% range_short_ids),]->crea.rep 
unique(crea.rep$PatientID)#5950
save(crea.rep,file="crea.rep2yrsall.rda")

CPRDinput<-file(paste("CPRD_input.csv"), open="w")
cat("Patient_ID","Date","Age","Gender","Ethnicity","Medcode","data1","data2","data3","data4","data5","data6","data7","data8","DataSource","Source","\n", sep=",",file="CPRD_input.csv",append=TRUE)
for (n in 1:8025802){ #Change loop number to number of records in dataset
cat((paste(CPRD.data6$patid[n])), (paste(CPRD.data6$eventdate[n])), (paste(CPRD.data6$Age[n])), (paste(CPRD.data6$gender[n])), (paste(CPRD.data6$Category[n])),(paste(CPRD.data6$medcode[n])),(paste(CPRD.data6$data1[n])), (paste(CPRD.data6$data2[n])),(paste(CPRD.data6$data3[n])), (paste(CPRD.data6$data4[n])), (paste(CPRD.data6$data5[n])), (paste(CPRD.data6$data6[n])),(paste(CPRD.data6$data7[n])),(paste(CPRD.data6$data8[n])),(paste(CPRD.data6$DataSource[n])), (paste(CPRD.data6$Source[n])), "\n", file="CPRD_input.csv", sep=",", fill=FALSE, labels=NULL, append=TRUE)}

#FREEZE OF CPRD.DATA6
load("myDF.Rdata")

CPRD.data6$Creatinine<-ifelse(CPRD.data6$medcode=="5",as.numeric(CPRD.data6$data2),NA)
#Any non-numeric values are marked NA
CPRD.data6$LogCreatinine<-log10(CPRD.data6$Creatinine)
CPRD.data6$Creatinine<-ifelse(CPRD.data6$Creatinine<18,NA,CPRD.data6$Creatinine)  # creatinine values less than 18 considered not valid

#Check HF cohort
HF<-read.csv("HeartFailure.csv")
HFs<-CPRD.data[CPRD.data$medcode %in% HF$Medcode,]
length(unique(as.factor(HFs$patid))) #121766 patients with a post 2008 creatinine test and a HF diagnosis based on codes

#Add LVEF values

LV<-CPRD.data[CPRD.data$medcode==30918 & CPRD.data$data2>=40,] #Find patients with impaired LVEF
LVEF<-CPRD.data[CPRD.data$patid %in% LV$patid,]
length(unique(as.factor(LVEF$patid))) #24 patients with a post 2008 creatinine test and an impaired LVEF
LVEF2<-CPRD.data[CPRD.data$patid %in% LV$patid & CPRD.data$patid %in% HFs$patid,]
length(unique(as.factor(LVEF2$patid))) #24 patients with a post 2008 creatinine test, HF code and a LVEF based on codes

#All of the LVEF qualifying patients also had a HF code.

#Add BNP values
BNP<-read.csv("BNP.csv")
BNPs<-CPRD.data[(CPRD.data$medcode %in% BNP$Medcode[BNP$Sensitive==1] & CPRD.data$data2>=2000)|(CPRD.data$medcode %in% BNP$Medcode[BNP$Sensitive==0] & CPRD.data$data2>=100),] #Find patients with impaired LVEF
BN<-CPRD.data[CPRD.data$patid %in% BNPs$patid,]
length(unique(as.factor(BN$patid))) #9374 patients with a post 2008 creatinine test and a high BNP
BN2<-CPRD.data[CPRD.data$patid %in% BNPs$patid & CPRD.data$patid %in% HFs$patid,]
length(unique(as.factor(BN2$patid))) #9328 patients with a post 2008 creatinine test, HF code and a BNP based on codes

#46 of the BNP qualifying patients were missing a HF code.

#Test speculative HF codes
HFs2<-CPRD.data[CPRD.data$medcode %in% HF$Medcode[HF$Speculative==0],]
length(unique(as.factor(HFs2$patid))) #109748 patients with a post 2008 creatinine test and a HF diagnosis based on codes



