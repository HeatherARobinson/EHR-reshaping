
#PERL COMMANDS
cd research-events-medication-htn
npm install
node index.js -a resources\perl_input.txt && sort resources\perl_input.txt.done > resources\codesh.txt.done.sorted
#PERL NOT USED IN THIS INSTANCE DUE TO THE COMPLEXITY OF THE INSTRUCTIONS
##################################################################################################################################
#R COMMANDS
library(stringr)
library(plyr)
library(lubridate)
library(dplyr)
library(tidyr)
load("crea.rep221117.rda")
meddata<-read.csv("perl_input.csv")
meddata<-unique(meddata)

################################################################################################
#MAKE A MINIMAL LIST OF CREATININE MEASUREMENT DATES PER PATIENT (smalltab)
NSAID<-meddata[meddata$FAMILY=="NSAID",]
NSAID<-NSAID[order(rev(NSAID$EntryDate),NSAID$TYPE,NSAID$DAILY_DOSE),]
NSAID$EntryDate<-as.Date(NSAID$EntryDate,format="%d/%m/%Y")
NSAID$END_DATE<-as.Date(NSAID$END_DATE,format="%d/%m/%Y")
NSAID$check<-paste(NSAID$TYPE,NSAID$DAILY_DOSE,sep="")

smalltab<-crea.rep[crea.rep$PatientID%in%NSAID$PatientID,c("PatientID","event.date")]
smalltab$NSAIDs<-NA

#CREATE A TABLE OF NSAID MEDICATIONS BY PATIENT
for (i in 1:length(smalltab$event.date)){
N<-NSAID[NSAID$EntryDate<=smalltab$event.date[i]&NSAID$EntryDate>=smalltab$event.date[i],c("EntryDate","PatientID","TYPE","check")]
N<-N[!duplicated(N$TYPE),]
N %>%
     group_by(PatientID) %>% 
     mutate(NSAIDs = paste0(check, collapse = "")) 
smalltab$NSAIDs<-ifelse(smalltab$event.date %in% N$EntryDate &smalltab$PatientID %in% N$PatientID,paste(N$check),smalltab$NSAIDs)
}
smalltab$NSAIDs<-ifelse(nchar(smalltab$NSAIDs)<5,NA,smalltab$NSAIDs)
#################################################################################################CHECKED
smalltab<-crea.rep[,c("PatientID","event.date")]
ARB<-meddata[meddata$FAMILY=="ARB",]
ARB<-ARB[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
ARB<-ARB[order(ARB$PatientID,ARB$TYPE,ARB$DAILY_DOSE),] 
ARB$EntryDate<-as.Date(ARB$EntryDate,format="%d/%m/%Y")
ARB$END_DATE<-as.Date(ARB$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$ARBs<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-ARB[ARB$PatientID==smalltab$PatientID[j]&ARB$EntryDate<=smalltab$event.date[i]&ARB$END_DATE>=smalltab$event.date[i],]
K<-K[order(rev(K$EntryDate)),]
K<-K[!duplicated(K$TYPE),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
NB<-plyr::rename(NB, c("K$EntryDate"="Date", "K$check"="check"))
smalltab$ARBs<-ifelse(is.na(smalltab$ARBs),paste(NB$check),smalltab$ARBs)
}}


#################################################################################################CHECKED

ALD_ANT<-meddata[meddata$FAMILY=="ALD_ANT",]
ALD_ANT<-ALD_ANT[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
ALD_ANT<-ALD_ANT[order(ALD_ANT$PatientID,ALD_ANT$TYPE,ALD_ANT$DAILY_DOSE),] 
ALD_ANT$EntryDate<-as.Date(ALD_ANT$EntryDate,format="%d/%m/%Y")
ALD_ANT$END_DATE<-as.Date(ALD_ANT$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$Aldosterone_Antagonists<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-ALD_ANT[ALD_ANT$EntryDate<=smalltab$event.date[i]&ALD_ANT$END_DATE>=smalltab$event.date[i],]
K<-K[order(rev(K$EntryDate)),]
K<-K[!duplicated(K$TYPE),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
NB<-plyr::rename(NB, c("K$EntryDate"="Date", "K$check"="check"))
smalltab$Aldosterone_Antagonists<-ifelse(is.na(smalltab$Aldosterone_Antagonists),paste(NB$check),smalltab$Aldosterone_Antagonists)
}}

#################################################################################################CHECKED
Anti<-meddata[meddata$FAMILY=="ANT_MIC",]
Anti<-Anti[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
Anti<-Anti[order(Anti$PatientID,Anti$TYPE,Anti$DAILY_DOSE),] 
Anti$EntryDate<-as.Date(Anti$EntryDate,format="%d/%m/%Y")
Anti$END_DATE<-as.Date(Anti$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$Antimicrobials<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-Anti[Anti$EntryDate<=smalltab$event.date[i]&Anti$END_DATE>=smalltab$event.date[i],]
K<-K[order(rev(K$EntryDate)),]
K<-K[!duplicated(K$TYPE),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
NB<-plyr::rename(NB, c("K$EntryDate"="Date", "K$check"="check"))
smalltab$Antimicrobials<-ifelse(is.na(smalltab$Antimicrobials),paste(NB$check),smalltab$Antimicrobials)
}}
##############################################################################################

THI<-meddata[meddata$FAMILY=="DIUR_THI",]
THI<-THI[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
THI<-THI[order(rev(THI$EntryDate),THI$TYPE,THI$DAILY_DOSE),] 
THI$EntryDate<-as.Date(THI$EntryDate,format="%d/%m/%Y")
THI$END_DATE<-as.Date(THI$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$Thiazide_Diuretics<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-THI[THI$PatientID==smalltab$PatientID[j]&THI$EntryDate<=smalltab$event.date[i]&THI$END_DATE>=smalltab$event.date[i],]
K<-K[!duplicated(c(K$PatientID,K$EntryDate,K$TYPE)),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
smalltab$Thiazide_Diuretics<-ifelse(is.na(smalltab$Thiazide_Diuretics)&smalltab$PatientID==smalltab$PatientID[j],paste(NB$"K$check"),smalltab$Thiazide_Diuretics)
}}
################################################################################### CHECKED
LOOP<-meddata[meddata$FAMILY=="DIUR_LOOP",]
LOOP<-LOOP[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
LOOP<-LOOP[order(LOOP$PatientID,LOOP$TYPE,LOOP$DAILY_DOSE),] 
LOOP$EntryDate<-as.Date(LOOP$EntryDate,format="%d/%m/%Y")
LOOP$END_DATE<-as.Date(LOOP$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$Loop_Diuretics<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-LOOP[LOOP$EntryDate<=smalltab$event.date[i]&LOOP$END_DATE>=smalltab$event.date[i],]
K<-K[order(rev(K$EntryDate)),]
K<-K[!duplicated(K$TYPE),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
NB<-plyr::rename(NB, c("K$EntryDate"="Date", "K$check"="check"))
smalltab$Loop_Diuretics<-ifelse(is.na(smalltab$Loop_Diuretics),paste(NB$check),smalltab$Loop_Diuretics)
}}
################################################################################### CHECKED
IMM<-meddata[meddata$FAMILY=="Immunosuppressant",]
IMM<-IMM[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
IMM<-IMM[order(IMM$PatientID,IMM$TYPE,IMM$DAILY_DOSE),] 
IMM$EntryDate<-as.Date(IMM$EntryDate,format="%d/%m/%Y")
IMM$END_DATE<-as.Date(IMM$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$Immunosuppressants<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-IMM[IMM$EntryDate<=smalltab$event.date[i]&IMM$END_DATE>=smalltab$event.date[i],]
K<-K[order(rev(K$EntryDate)),]
K<-K[!duplicated(K$TYPE),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
NB<-plyr::rename(NB, c("K$EntryDate"="Date", "K$check"="check"))
smalltab$Immunosuppressants<-ifelse(is.na(smalltab$Immunosuppressants),paste(NB$check),smalltab$Immunosuppressants)
}}

########################################################################################
ACEI<-meddata[meddata$FAMILY=="ACEI",]
ACEI<-ACEI[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
ACEI<-ACEI[order(ACEI$PatientID,ACEI$TYPE,ACEI$DAILY_DOSE),] 
ACEI$EntryDate<-as.Date(ACEI$EntryDate,format="%d/%m/%Y")
ACEI$END_DATE<-as.Date(ACEI$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$ACE_Inhibitors<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-ACEI[ACEI$EntryDate<=smalltab$event.date[i]&ACEI$END_DATE>=smalltab$event.date[i],]
K<-K[order(rev(K$EntryDate)),]
K<-K[!duplicated(K$TYPE),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
NB<-plyr::rename(NB, c("K$EntryDate"="Date", "K$check"="check"))
smalltab$ACE_Inhibitors<-ifelse(is.na(smalltab$ACE_Inhibitors),paste(NB$check),smalltab$ACE_Inhibitors)
}}

########################################################################################
N<-meddata[meddata$FAMILY=="Nephrotoxin",]
N<-N[,c("PatientID","TYPE","EntryDate","END_DATE","DAILY_DOSE")]
N<-N[order(N$PatientID,N$TYPE,N$DAILY_DOSE),] 
N$EntryDate<-as.Date(N$EntryDate,format="%d/%m/%Y")
N$END_DATE<-as.Date(N$END_DATE,format="%d/%m/%Y")

#MATCH EACH CREATININE TEST DATE TO ALL ONGOING NSAID MEDICATIONS
smalltab$Nephrotoxins<-NA
for (i in length(unique(smalltab$event.date))){
for (j in length(unique(smalltab$PatientID))){
K<-N[N$EntryDate<=smalltab$event.date[i]&N$END_DATE>=smalltab$event.date[i],]
K<-K[order(rev(K$EntryDate)),]
K<-K[!duplicated(K$TYPE),]
K$check<-paste(K$TYPE,K$DAILY_DOSE,sep="")
NB<-aggregate(K$check~K$EntryDate, FUN = paste, collapse = ";", data = K)
NB<-plyr::rename(NB, c("K$EntryDate"="Date", "K$check"="check"))
smalltab$Nephrotoxins<-ifelse(is.na(smalltab$Nephrotoxins),paste(NB$check),smalltab$Nephrotoxins)
}}
#RECODE COLUMNS FOLLOWING AHMED'S INSTRUCTIONS FOR CODING (SEE PRE-PROCESSING PLAN)

#######################################################################################
unique_NSAIDs<-unique(smalltab$NSAIDs)
write.csv(unique_NSAIDs,file="uniqueNSAIDs.csv")
unique_LOOPs<-unique(smalltab$Loop_Diuretics)
write.csv(unique_LOOPs,file="uniqueLoops.csv")
unique_ARBs<-unique(smalltab$ARBs)
write.csv(unique_ARBs,file="uniqueARBs.csv")
unique_ALDs<-unique(smalltab$Aldosterone_Antagonists)
write.csv(unique_ALDs,file="uniqueALDs.csv")
unique_ANTIs<-unique(smalltab$Antimicrobials)
write.csv(unique_ANTIs,file="uniqueANTIs.csv")
unique_THIs<-unique(smalltab$Thiazide_Diuretics)
write.csv(unique_THIs,file="uniqueTHIs.csv")
unique_IMMs<-unique(smalltab$Immunosuppressants)
write.csv(unique_IMMs,file="uniqueIMMs.csv")
unique_ACEIs<-unique(smalltab$ACE_Inhibitors)
write.csv(unique_ACEIs,file="uniqueACEIs.csv")
unique_ACEIs<-unique(smalltab$ACE_Inhibitors)
write.csv(unique_ACEIs,file="uniqueACEIs.csv")

#########################################################################################
NS<-read.csv("uniqueNSAIDs.csv",header=TRUE)
smalltab<-merge(smalltab,NS,all.x=TRUE)

