load("crea.rep091117.rda")
load("sir.datahfonly.Rdata")

library (taRifx)
library (dplyr)
library(tcltk)
library(lubridate)
require(dplyr)

##################################################################################
#List creatinine tests, marking those of CKD patients

#Tests marked with a 1 for KDmark are qualifying tests

##############################################################################################
#Check for and exclude CKD patients
#tabulate the first qualifying test for each patient
crea.rep$KDmark<-ifelse(!is.na(crea.rep$MDRDeGFR)&crea.rep$MDRDeGFR<60,1,0)
CKs<-crea.rep[crea.rep$KDmark==1,c("PatientID","EntryDate","KDmark")] #Kidney Injury flagged tests

#find all tests in window, take min KDmark. If 1, CKD, if 0, not.

CKpot<-crea.rep[crea.rep$PatientID %in% CKs$PatientID,]
CKpot$EntryDate2<-as.Date(as.character(CKpot$EntryDate),format="%Y%m%d")
CKpot$EntryDate1<-as.Date(as.character(CKpot$EntryDate),format="%Y%m%d")-90
crea.rep$event.date<-as.Date(as.character(crea.rep$EntryDate),format="%Y%m%d")
CKpot<-CKpot[,c(1:2,71:73)] 

pb1<-tkProgressBar(title="Processing CKD values",min=0,max=length(CKpot$PatientID),width=300) 

for (i in 1:length(CKpot$PatientID)){
CKpot$CKD[i]<-min(crea.rep$KDmark[crea.rep$PatientID==CKpot$PatientID[i] &crea.rep$event.date>CKpot$EntryDate1[i] & crea.rep$event.date<=CKpot$EntryDate2[i]])
setTkProgressBar(pb1,i,label=paste(round(i/(length(CKpot$PatientID))*100, 0),"% done"))
}

#CKpot<-c(,[])
#crea.rep<-merge(crea.rep,CKpot[,c()],all.x=TRUE)
#summary(crea.rep$CKD)

crea.rep$CKDStage<-ifelse(as.numeric(crea.rep$CKD)>0,1,0)

#ASSIGN CKD STAGES
crea.rep$CKDStage<-ifelse(!is.na(crea.rep$CKDStage)&crea.rep$MDRDeGFR>=60&crea.rep$MDRDeGFR<=89,2,crea.rep$CKDStage)
crea.rep$CKDStage<-ifelse(!is.na(crea.rep$CKDStage)&crea.rep$MDRDeGFR>=30&crea.rep$MDRDeGFR<=59,3,crea.rep$CKDStage)
crea.rep$CKDStage<-ifelse(!is.na(crea.rep$CKDStage)&crea.rep$MDRDeGFR>=15&crea.rep$MDRDeGFR<=29,4,crea.rep$CKDStage)
crea.rep$CKDStage<-ifelse(!is.na(crea.rep$CKDStage)&crea.rep$MDRDeGFR<15,5,crea.rep$CKDStage)

###################################################################################
#NHS UKI AKI ALGORITHM
#Mark AKI qualifying tests
attach(crea.rep)

sir.data$event.date<-as.Date(as.character(sir.data$EntryDate),format="%Y%m%d")
a<-sir.data[sir.data$ReadCode=="44J3."&sir.data$PatientID %in% crea.rep$PatientID,]

# add date range from 2007 onwards

a$Creatinine<-as.numeric(a$CodeValue)
a$Age<-(as.numeric(year(strptime(a$EntryDate, format="%Y%m%d"))))-a$BirthYear
a<-a[!is.na(a$Creatinine)&!is.na(a$Ethnicity)&!is.na(a$Age),]
a$o<-ifelse(a$Ethnicity==4,1.212,1)
a$p<-ifelse(a$Gender=="F",0.742,1)
a$MDRDeGFR<-(175*((a$Creatinine/88.42)^-1.154))*(a$Age^-0.203)*a$o*a$p
a<-a[,c("PatientID","event.date","Creatinine","Age", "Gender","MDRDeGFR")]
attach(a)

#Order creatinine values and find the max per day per patient
destring(c(PatientID,Creatinine,Age,Gender,event.date,MDRDeGFR))
a <- a[order(-Creatinine),] #The highest stcreat per day will be retained
table(duplicated(a[,1:2]))
a2<-a[duplicated(a[,1:2]),]
a<-a[!rownames(a) %in% rownames(a2),]#drop other values
length(a$PatientID) #Number of records following duplicate removal #284233
a<-a[!is.na(a$Creatinine),]
#a<-a[!a$mdrd>250,]
#length(a$PatientID) #Remaining entries after removing missing and impossible values
a$KImark<-ifelse(a$MDRDeGFR<60,1,0)
attach(a)

a$KDmark<-ifelse(!is.na(a$MDRDeGFR)&a$MDRDeGFR<60,1,0)
attach(a)
#DEFINE POPULATION LEVEL REF. VALUE
ref.up=ref.low=NULL
  if(Gender=="M"){    
    ref.low=62
    ref.up=115
    } else {    
    ref.low=44
    ref.up=97}

#ADD AN INDEX NUMBER FOR EACH TEST
require(dplyr)
sorted <- a %>% 
          arrange(PatientID,event.date) %>%
          group_by(PatientID) %>%
          mutate(protagonist=row_number())
a<-data.frame(sorted)
attach(a)
summary(protagonist)

newAKI<-0
AKImonth<-0
AKIyear<-0
AKIweek<-0
AKIday<-0
max(protagonist) #number of loop iterations needed.


#Check if data available within 365 days prior,7 days or 2 days
#LOOP for x values, where x = the highest number of tests a patient had in the index year (max(protagonist)) 
mightydate<-NA
protagonistdos<-NA
yearmarker<-NA
weekmarker<-NA
overvalue<-NA
a <-a[order(PatientID,event.date),] 
attach(a)

#for each index (investigated) creatinine of key interest:
#Find the most recent prior test and note the date (testnodate) and value (testnovalue). 

pb3<-tkProgressBar(title="Processing creatinine values",min=0,max=max(protagonist),width=300) 

for (i in 1:max(protagonist)) {
setTkProgressBar(pb3,i,label=paste(round(i/max(protagonist)*100, 0),"% done"))
mightydate<-ifelse(protagonist==protagonist[i],event.date,mightydate)
protagonistdos<-ave(mightydate,PatientID,FUN=max)
yearmarker<-ifelse((protagonistdos-as.numeric(event.date))<=365 & (protagonistdos-as.numeric(event.date))>90,1,yearmarker)
weekmarker<-ifelse((protagonistdos-as.numeric(event.date))<=7 & (protagonistdos-as.numeric(event.date))>=0,1,weekmarker)

yearvalue<-ifelse(yearmarker==1,Creatinine,NA)
weekvalue<-ifelse(weekmarker==1,Creatinine,NA)
yearmedian<-ave(yearvalue[!is.na(yearvalue)],PatientID,FUN=function(x) median(x,na.rm=TRUE))
weekmin<-ave(weekvalue,PatientID,FUN=function(x) min(x,na.rm=TRUE))

mightyvalue[i]<-Creatinine[protagonist==i]}
protagonistvalue<-ave(mightyvalue,PatientID,FUN=max)}

AKIyear<-ifelse((protagonistvalue/yearmedian)>=1.5 & protagonist=='i'& !is.na(yearmedian),1,0)
AKIweek<-ifelse((protagonistvalue/weekmin)>=1.5 & protagonist=='i' & !weekmin=="NA",1,0)

}
#END OF LOOP
close(pb)

a$overdate<-overdate
a$testnovalue<-testnovalue
head(a,n=30)

#IF YEARLY LOOKBACK, TAKE MEDIAN OF RESULTS=RV2
sorted2 <- a[yearmarker==1] %>% 
          arrange(PatientID,event.date) %>%
          group_by(PatientID,event.date) %>%
          mutate(RV2=median(testnovalue))
sorted2<-data.frame(sorted2)

#IF WEEKLY LOOKBACK, TAKE LOWEST VALUE=RV1

sorted3 <- a[weekmarker==1] %>% 
          arrange(PatientID,event.date) %>%
          group_by(PatientID,event.date) %>%
          mutate(RV1=min(testnovalue))
sorted3<-data.frame(sorted2)

sorted2<-sorted2[,c("PatientID","event.date","RV1")]
sorted3<-sorted3,c("PatientID","event.date","RV2")]
a<-merge(a,sorted2,all.x=TRUE)
a<-merge(a,sorted3,all.x=TRUE)
attach(a)

#IS INDEX CREATININE(C1)/RV1 OR RV2 >=1.5?
a$RV_ratio<-ifelse(!is.na(a$RV2),a$Creatinine/a$RV2,NA)
a$RV_ratio<-ifelse(!is.na(a$RV1),a$Creatinine/a$RV1,a$RV_ratio)

#IF YES...

a$AKI_Stage<-ifelse(a$RV_Ratio>=1.5&a$Creatinine>354,3,NA)
a$AKI_Stage<-ifelse(a$RV_Ratio>=3& a$Creatinine<=354,3,AKI_Stage)
a$AKI_Stage<-ifelse(a$RV_Ratio>=2&RV_Ratio<3&C1<=(3*ref.up),2,AKI_Stage)
a$AKI_Stage<-ifelse(a$RV_Ratio>=1.5&RV_Ratio<2&C1<=(3*ref.up),1,AKI_Stage)



>=1.5,C1/RV2>=1.5)

#IF NO...
AKI_Stage<-ifelse(RV_Ratio<1.5&D>26&2day==1,1,AKI_Stage)

#IF YES...

AKI_Stage<-ifelse(RV_Ratio>=1.5&C1>(3*ULRI),3,AKI_Stage)
AKI_Stage<-ifelse(RV_Ratio>=3&C1<=(3*ULRI),3,AKI_Stage)
AKI_Stage<-ifelse(RV_Ratio>=2&RV_Ratio<3&C1<=(3*ULRI),2,AKI_Stage)
AKI_Stage<-ifelse(RV_Ratio>=1.5&RV_Ratio<2&C1<=(3*ULRI),1,AKI_Stage)



CKD$AKI<-NA



#crea.rep$AKI
