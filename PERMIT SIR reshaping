load ("sir.data.rda")
memory.size(50000)
#READ CONDITION FILES- SUFFIX ALL NAMES WITH A 1 THEN YOU CAN IMPORT THEM ALL TOGETHER

library(zoo)
library(plyr)
library(tidyverse)
library(zoo)
library(data.table)
library(survival)
library(lubridate)

####################################################

temp = list.files(pattern="*1.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))

#SELECT PATIENTS WHO WERE 18 OR ABOVE AT THE TIME OF HEART FAILURE DIAGNOSIS
hf<-sir.data[sir.data$ReadCode %in% HeartFailure1.csv$ReadCode,]
length(unique(as.factor(hf$PatientID))) #7254 total heart failure patients identified with confirmed Read Codes (V2)

hf$Age<-(as.numeric(year(strptime(hf$EntryDate, format="%Y%m%d"))))-hf$BirthYear
hf$hfage<-hf$Age
smalltab<-hf[,c("PatientID","hfage")]
first<-smalltab %>% group_by(PatientID) %>%
summarize(hfage = min(hfage))
sir.data<-merge(sir.data,first,by="PatientID",all.x=TRUE,all.y=FALSE)
sir.data<-sir.data[sir.data$hfage>=18,]
length(unique(as.factor(sir.data$PatientID))) #7208  hf patients who were 18 or over at first diagnosis

#SELECT PATIENTS WITH CREATININE DATA
sir.data[sir.data$ReadCode=="44J3.",]->crea 
length(unique(as.factor(crea$PatientID))) # 6972 hf patients over 18 at diagnosis with creatinine data

#REMOVE DIALYSIS PATIENTS
dialysis<-sir.data[sir.data$ReadCode %in% Dialysis1.csv$ReadCode,]
crea<-crea[!crea$PatientID %in% dialysis$PatientID,]

#DATA CLEANING
#REMOVE DUPLICATE AND OUT OF RANGE ENTRIES
as.numeric(as.character(crea$CodeValue)) -> crea$CodeValue
crea$Creatinine<-ifelse(crea$ReadCode=="44J3.",as.numeric(crea$CodeValue),NA) #Any non numeric values are marked NA
(as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d")))) -> year
(as.numeric(month(strptime(crea$EntryDate, format="%Y%m%d")))) -> month
(as.numeric(day(strptime(crea$EntryDate, format="%Y%m%d")))) -> day
crea$EntryPeriod<-paste(month,year)
#Delete duplicate test results
library(lubridate)
crea$Creatinine<-crea$CodeValue
crea<-crea[!(duplicated(crea[,c(1,15:16)])),]
crea[-which(crea$CodeValue<18),] -> crea # creatinine values less than 18 considered not valid


#SELECT HIGHEST DAILY CREATININE IF MULTIPLE ENTRIES AFTER REMOVING DELAYED DUPLICATES AND OUT OF RANGE VALUES

smalltab<-crea[,c("PatientID","Creatinine", "EntryDate")]
maxcrea<-smalltab %>% group_by(PatientID, EntryDate) %>%
summarize(Creatinine = max(Creatinine))
crea$Creatinine<-ifelse(crea$PatientID %in% maxcrea$PatientID & crea$EntryDate %in% maxcrea$EntryDate, maxcrea$Creatinine, crea$Creatinine)

head(smalltab[with(smalltab, order(PatientID, EntryDate)),])
head(maxcrea[with(maxcrea, order(PatientID, EntryDate)),])

#ASSIGN AGE
crea$Age<-(as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d"))))-crea$BirthYear

#Create a date format entry date
(as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d")))) -> year
(as.numeric(month(strptime(crea$EntryDate, format="%Y%m%d")))) -> month
(as.numeric(day(strptime(crea$EntryDate, format="%Y%m%d")))) -> day
as.Date.character(paste(year,month,day,sep="-")) -> crea$event.date

#LIMIT TO PATIENTS WITH AT LEAST 1 POST 2008 CREATININE TEST VALUES
crea$EntryDate <- as.Date(as.character(crea$EntryDate, "%Y%m%d"))
post2008<-crea[as.numeric(year(strptime(crea$EntryDate, format="%Y%m%d")))>=2008,]
table(post2008$PatientID) < 1 -> rare  
rownames(as.matrix(rare)) -> ids
table(rare)

crea[!(crea$PatientID %in% ids[rare]),] -> crea.rep	
levels(unique(as.factor(crea$PatientID)))

######################################################
#Add demographic variables from lookup tables

#LSOA and age already added in SIR

#CODE ETHNICITY
ethnic.data<-read.table("ethnic.data.csv",header=TRUE,sep=",")
ethnic.data$Category<-floor(ethnic.data$Category)
crea.rep<-merge(crea.rep,ethnic.data,by.x="Ethnicity",by.y="ClinCode2",all.x=TRUE, all.y=FALSE)
names(crea.rep)
crea.rep<-subset(crea.rep, select=-c(Ethnicity,ClinCode1,ReligionDescription,MaritalStatus))
colnames(crea.rep)[which(names(crea.rep) == "Category")] <- "Ethnicity"

levels(unique(as.factor(crea.rep$PatientID))) #6923 remaining if no range limit

#Breakpoint
#######################################################
#######################################################
save(crea.rep, file = "crea.rephfonly.Rdata")
save(sir.data, file = "sir.datahfonly.Rdata")
#######################################################


#CHECK PATIENTS WHICH HAVE A SPECIFIC RECORDED TIME RANGE IN YEARS AND AT LEAST 2 TESTS
aggregate(as.numeric(year(strptime(crea.rep$event.date, format="%Y-%m-%d"))), list(crea.rep$PatientID), range) -> ranges
ranges$x[,2] - ranges$x[,1] -> ranges$range
ranges[(which(ranges$range<1)),1] -> range_short_ids    # define exclusion range
crea.rep[-which(crea.rep$PatientID %in% range_short_ids),]->crea.rep 
crea.rep<-crea.rep[ crea.rep$PatientID %in%  names(table(crea.rep$PatientID))[table(crea.rep$PatientID)>=2] , ] # define min tests

sir.data<-sir.data[which(sir.data$PatientID %in% crea.rep$PatientID),]  #x remaining with 1yr 2 test limit

#######################################################
#Breakpoint
#######################################################
#######################################################
save(crea.rep, file = "crea.rep1yr2tests.Rdata")
save(sir.data, file = "sir.data1yr2tests.Rdata")
#######################################################

#ADD IN VARIOUS CONDITIONS AND FLAGS FROM MAIN EHR FILES USING OTHER R SCRIPT IN SAME FOLDER
#ADD PRESCRIPTION DATA USING OTHER R SCRIPT IN SAME FOLDER

#Narrow lookup table to the full list of codes of interest to speed up processing
temp = list.files(pattern="*1.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
merged <- Reduce(function(x, y) merge(x, y, all=TRUE), 
                 list(AF1.csv,BMI1.csv,BNP1.csv,BUN1.csv,cessation1.csv,DBP1.csv,Diabetes1.csv,Dialysis1.csv,Haemoglobin1.csv,HeartFailure1.csv, HeartRate1.csv,IHD1.csv,MCV1.csv,Nephrectomy1.csv,NTPROBNP1.csv,PVD1.csv,RM1.csv,SBP1.csv,SerumAlbumin1.csv,SerumPotassium1.csv,SerumSodium1.csv,smoking1.csv,transplant1.csv,UACR1.csv,UAlbumin1.csv,UricAcid1.csv))
sir.data<-sir.data[which(sir.data$PatientID %in% crea.rep$PatientID & sir.data$ReadCode %in% merged$ReadCode),]

#######################################################
#####OPTIONAL BREAKPOINT
save(sir.data, file = "sir.datanofilters.Rdata")
#######################################################

##########################################################################
#CODE FOR POTENTIAL LOOP (NEEDS WORK)
#for (i in 1:length(temp)){
#col_names<-""
#eval(parse(text = paste0('sir.data2$colum', i, '<- with(sir.data2,
#ifelse(sir.data2$ReadCode %in% (temp[[i]][,2]),paste(sir.data2$EntryDate), NA)
#)')))
#}
############################################################################

#NEPHRECTOMY
crea.rep$nephrectomydate<-with(crea.rep,ifelse(crea.rep$ReadCode  %in%  Nephrectomy1.csv$ReadCode,paste(crea.rep$EntryDate), NA)) 
crea.rep$nephrectomydate<-as.Date(crea.rep$nephrectomydate, format="%Y%m%d")
smalltab<-crea.rep[!is.na(crea.rep$nephrectomydate),c("PatientID","nephrectomydate")]
first<-smalltab %>% group_by(PatientID) %>%
summarize(nephrectomydate = min(nephrectomydate))
sir.data<-merge(crea.rep,first,by="PatientID",all.x=TRUE,all.y=FALSE)

crea.rep$nephrectomydate<-ifelse(crea.rep$PatientID %in% first$PatientID,first$nephrectomydate,crea.rep$nephrectomydate)

crea.rep$SerumAlbumin<-data2[indx3, "CodeValue"]
crea.rep$AlbuminDateFlag<- ifelse(abs(crea.rep$EntryDate - data2$EntryDate[indx3]) >365, 1, NA)
rm(data2)

#also....
#Diabetes
#Atrial Fibrillation
#Ischaemic Heart Disease
#Peripheral Vascular Disease
#Renal Malignancy
#Renal transplant
##########################################################
#CODE EACH OF THE FORMULA VARIABLES

crea.rep$log_CREA <- log10(crea.rep$Creatinine)
#crea.rep$AKI #Acute Kidney Injury
crea.rep$PP<-as.numeric(crea.rep$SystolicBP)-as.numeric(crea.rep$DiastolicBP)
crea.rep$HTN<ifelse(crea.rep$SystolicBP>140|crea.rep$DiastolicBP>90,1,0)
#crea.rep$eGFR<- #Estimated glomerular filtration rate
#crea.rep$CKD<- #Chronic Kidney Disease
#crea.rep$RateRenChange #Rate of renal change
crea.rep$Anaemia<-ifelse(((crea.rep$Gender=="M" & crea.rep$Haemoglobin<130)|(crea.rep$Gender== "F" & crea.rep$Haemoglobin<115)),1,0)
#crea.rep$AKIepisodes<- #no. past AKI episodes?
#crea.rep$WorsRenFail<- Worsening renal failure

#########################################################
#CODE STOP CODED VARIABLES  
#smoking
#anaemia
#hypertension
#immunosuppresants
#antimicrobials
#NSAIDSs & STOP CODES/EXPOSURE TIME
#Nephrotoxins

#########################################################
PRESCRIBING DATA
###########################################
#PREP TAB DELIMITED FILES FOR PERL
#https://github.com/rw251/research-events-medication-htn/blob/master/resources/example-data2.txt
head(P2[P2$ReadCode=="b311.",])

crea.rep$LDdose<- #LOOP DIURETIC DOSE
crea.rep$TDdose<- #Thiazide DIURETIC DOSE
crea.rep$AAdose<- #ALDOSTERONE ANTAGONIST DOSE
crea.rep$ACEIdose<- #ACE INHIBITOR DOSE
crea.rep$ARBdose<- #Angiotensin receptor blocker DOSE

CHECK FOR SENSITIITY OF SPECULATIVE HEART FAILURE CODES
###################################################################
#HEART FAILURE ALL CODES ANY HF AT ANY POINT
data2<-sir.data[sir.data$ReadCode %in% HeartFailureAll1.csv$Code,]
crea.rep$HeartFailureAll<-ifelse(crea.rep$PatientID  %in%  data2$PatientID,1,0)
rm(data2)
###################################################################
#HEART FAILURE CONFIRMED CODES ANY HF AT ANY POINT
data2<-sir.data[sir.data$ReadCode %in% HeartFailureConfirmed1.csv$ReadCode,]
crea.rep$HeartFailureConf<-ifelse(crea.rep$PatientID  %in%  data2$PatientID,1,0) 
rm(data2)
specheartpatients<-crea.rep[crea.rep$HeartFailureConf==0&crea.rep$HeartFailureAll==1,]
levels(as.factor(specheartpatients$PatientID))
table(crea.rep$HeartFailureAll)
